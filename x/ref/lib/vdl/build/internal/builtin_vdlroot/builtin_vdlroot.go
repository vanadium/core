// Copyright 2020 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by go-bindata.
// sources:
// v23/vdlroot/math/math.vdl
// v23/vdlroot/math/vdl.config
// v23/vdlroot/signature/signature.vdl
// v23/vdlroot/time/time.vdl
// v23/vdlroot/time/vdl.config
// v23/vdlroot/vdltool/config.vdl
// DO NOT EDIT!

package builtin_vdlroot

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mathMathVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xc1\x6a\xf3\x30\x10\x04\xe0\x73\xf4\x14\xf3\x02\xb1\xff\x38\xc6\xfc\xd7\x34\xcd\x21\x50\x7a\x68\xda\xde\xd7\xf2\xda\x12\x95\x25\x23\xad\x43\x4d\xc9\xbb\x17\xa5\x50\x72\x28\x94\x1e\x07\x76\x67\xbe\xb2\xc4\x3e\x4c\x4b\xb4\x83\x11\x54\xff\x36\x0d\x9e\x0d\xe3\x95\x3c\x75\x76\x1e\xb1\x9b\xc5\x84\x98\x0a\xec\x9c\xc3\xf5\x28\x21\x72\xe2\x78\xe6\xae\x50\x65\x89\x97\xc4\x08\x3d\xc4\xd8\x84\x14\xe6\xa8\x19\x3a\x74\x0c\x9b\x30\x84\x33\x47\xcf\x1d\xda\x05\x84\xbb\xd3\xfd\x3a\xc9\xe2\x38\x7f\x39\xab\xd9\x27\x86\x18\x12\x68\xf2\x68\x19\x7d\x98\x7d\x07\xeb\x21\x86\xf1\x70\xdc\x1f\x1e\x4f\x07\xf4\xd6\x71\xa1\xd4\x44\xfa\x8d\x06\xc6\x48\x62\x94\xba\x9a\xc7\xc9\xf1\x7b\x53\xe7\x21\x82\xfe\x8a\xf0\xf3\xd8\x72\xbc\xc6\x90\xb8\xcb\xb2\x6d\xb5\x6e\xad\x20\x32\x39\x50\x1e\x18\x69\xb0\x9e\xe2\x82\x89\xa2\xa4\x42\xc9\x32\xf1\x4d\x5f\x92\x38\x6b\xc1\x87\x5a\x3d\xe5\x97\xde\x05\x92\x6d\xa5\x56\xc7\x91\x86\xef\x74\xb9\x45\x6c\xaa\xff\xbf\x2a\x9a\xfa\x0f\x8a\x5c\xf8\x13\xa3\xa9\x6f\x19\x4d\xad\x2e\xea\x33\x00\x00\xff\xff\xce\xca\xd1\x3a\xbf\x01\x00\x00")

func mathMathVdlBytes() ([]byte, error) {
	return bindataRead(
		_mathMathVdl,
		"math/math.vdl",
	)
}

func mathMathVdl() (*asset, error) {
	bytes, err := mathMathVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/math.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mathVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x41\x4b\xc4\x30\x10\x85\xcf\xc9\xaf\x78\xf4\xbc\xb4\x28\x22\x12\xf0\xb4\x07\x0f\xe2\x9e\x2a\x82\xb7\x98\x4c\xd3\xc1\x34\xa9\xd9\x74\x51\x96\xfe\x77\x49\xa3\x7b\xde\xcb\x3b\x7c\xf3\xe6\x7b\x5d\x87\x7e\x24\x9c\xac\x6f\x4d\x0c\x03\x3b\x0c\xec\x09\x43\x4c\xc8\x23\x61\xd2\x79\xc4\xac\xcd\xa7\x76\x84\x5a\x58\x12\x1d\xc1\x96\xe3\xa4\x33\x1b\x04\x9d\xf9\x44\xc8\x3f\x33\x1d\x65\xd7\x81\x03\x48\x9b\x11\x8e\x02\x25\x9d\xc9\xc2\xeb\xe0\x16\xed\xa8\x95\x7f\x0b\x8f\x65\x2e\xc7\xe8\xdb\xfd\x06\xce\x52\x3c\x45\x85\xb3\x14\xe2\x8d\x13\xf5\xf1\xb0\x39\xfb\xa2\xac\x58\x34\xfb\x38\xcd\x9e\xbe\xef\xef\x1a\x85\x8a\xc4\x33\x07\xab\x70\x58\xa6\x0f\x4a\xbb\x8d\x94\x0f\x85\xc6\x5c\xba\x15\xbf\x53\x2a\xfa\x97\x68\x49\xe1\x35\xf0\xd7\x42\xeb\x76\xa9\xf9\xef\xbe\xb9\x7d\x68\xd4\x95\xee\xd2\xbd\x46\x5e\x62\xdd\xc9\x55\xfe\x06\x00\x00\xff\xff\x03\xf0\x4f\xb5\x68\x01\x00\x00")

func mathVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_mathVdlConfig,
		"math/vdl.config",
	)
}

func mathVdlConfig() (*asset, error) {
	bytes, err := mathVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _signatureSignatureVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x41\x8f\xd3\x3c\x14\x3c\x37\xbf\x62\x8e\xdf\x77\x20\x01\x24\xce\xa8\xec\xf6\x50\x09\xda\x4a\x2d\x5c\xaa\x1e\xdc\xf8\xc5\x31\x9b\x3c\x47\x7e\x2f\x2b\x55\x68\xff\x3b\x72\x12\xda\xd2\xa2\x15\xe2\x66\x3f\xcf\xcc\x9b\x99\x28\x45\x81\x87\xd0\x9d\xa2\x77\xb5\xe2\xfd\xdb\x77\x1f\xb0\xab\x09\xdf\x0c\x1b\xeb\xfb\x16\xf3\x5e\xeb\x10\x25\xc7\xbc\x69\x30\x80\x04\x91\x84\xe2\x33\xd9\x3c\x2b\x0a\x7c\x15\x42\xa8\xa0\xb5\x17\x48\xe8\x63\x49\x28\x83\x25\x78\x81\x0b\xcf\x14\x99\x2c\x8e\x27\x18\x7c\xda\x3e\xbe\x11\x3d\x35\x94\x58\x8d\x2f\x89\x85\xa0\xb5\x51\x94\x86\x71\x24\x54\xa1\x67\x0b\xcf\xd0\x9a\xf0\x79\xf9\xb0\x58\x6d\x17\xa8\x7c\x43\x79\x96\x28\x1b\x53\x3e\x19\x47\x10\xef\xd8\x68\x1f\x09\x96\x2a\xcf\x24\xd0\x53\x47\xc9\x55\x97\x8c\xb1\x7a\x76\xf0\xac\x14\x2b\x53\x12\x0c\x5b\xb4\xa4\x75\xb0\x17\xa6\xe4\x59\x77\xab\x36\xec\x58\x9e\x69\x96\xa4\x8c\xfe\x98\xd4\xeb\xeb\x9d\xa1\x82\xe1\x8b\x7c\x9e\xa5\xe5\x57\x3c\xd1\xd8\x97\x8a\x1f\xd9\x6c\x65\x5a\x02\x90\x26\x9e\x5d\x36\xdb\x3c\xb9\x8d\xd1\xfa\x7c\x7f\x0c\x25\xae\xdf\x17\xed\x91\xac\x00\xfb\xc3\x70\x02\x8a\x02\xab\x00\xe9\xa8\xf4\xa6\x41\x88\x96\x12\x30\xcf\x66\x5f\x86\x38\x82\xfd\x61\x3c\x25\xe4\x3a\x3d\x8f\x55\x4f\x69\xd9\xb4\x94\x67\x2f\x43\xae\x51\xf1\xf5\x4c\x94\x30\x96\xec\x5d\xb8\x91\xfc\xcf\xc1\x46\x07\x93\xd3\xbf\xac\x75\xca\x30\x19\x98\xb8\xf7\x0e\x70\xb7\xf3\x32\x59\xf2\x3c\x3a\x49\x93\xfd\x61\x1e\x1d\x86\xaf\xdb\xf5\x0a\x13\x5d\xdf\x12\xab\x64\xb3\x75\xaf\x13\xe8\x8c\x59\xf7\x7a\x03\x5a\xf2\x56\x23\x99\x16\xf8\x98\x30\x17\x21\x19\xc7\xff\x85\x4e\x7d\x60\xd3\xfc\x3f\x08\x4e\xe0\x33\x76\x12\xfc\x03\x78\x67\x46\x7f\x69\xbb\xe1\x13\x2e\x2d\xa9\x71\x32\xf5\x96\x64\x5e\x2b\x0d\xe2\xd9\x35\x74\x36\x3c\x55\x96\x68\x37\x7d\xfd\x56\xd5\xaf\xcb\x2e\x81\x13\x23\x1c\xbf\x53\xa9\xc9\xc3\x30\x1a\xfe\xe8\x6b\xd5\x97\xec\x67\x00\x00\x00\xff\xff\x7a\xf5\x7c\x0e\x29\x04\x00\x00")

func signatureSignatureVdlBytes() ([]byte, error) {
	return bindataRead(
		_signatureSignatureVdl,
		"signature/signature.vdl",
	)
}

func signatureSignatureVdl() (*asset, error) {
	bytes, err := signatureSignatureVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "signature/signature.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeTimeVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\xdf\x73\x1b\xb7\x11\x7e\x16\xff\x8a\x1d\xf5\x21\xf6\x98\x3a\x52\x6e\x9a\x56\xf6\x93\x2b\x27\xae\x3b\xa9\x93\xa9\xe4\x76\xa6\x2f\x9c\x25\x6e\x79\xb7\x23\x1c\x70\x05\x70\xa4\x98\x4e\xfe\xf7\xce\x2e\x0e\xc7\x1f\x56\x5d\x25\xa3\x3c\x90\xc4\x2e\xf6\xc7\xf7\x7d\xbb\xf0\x62\x01\xb7\xbe\xdf\x07\x6e\xda\x04\xaf\x97\xd7\x7f\x80\xfb\x96\xe0\x1f\xe8\xb0\xe6\xa1\x83\x77\x43\x6a\x7d\x88\x15\xbc\xb3\x16\xf4\x50\x84\x40\x91\xc2\x96\xea\x6a\xb6\x58\xc0\xe7\x48\xe0\x37\x90\x5a\x8e\x10\xfd\x10\x0c\x81\xf1\x35\x01\x47\x68\xfc\x96\x82\xa3\x1a\xd6\x7b\x40\xf8\xf3\xdd\xfb\xab\x98\xf6\x96\xc4\xca\xb2\x21\x17\x09\x52\x8b\x09\x0c\x3a\x58\x13\x6c\xfc\xe0\x6a\x60\x07\xa9\x25\xf8\xf1\xe3\xed\xf7\x9f\xee\xbe\x87\x0d\x5b\xaa\x66\x62\xf2\x33\x9a\x07\x6c\x08\x12\x77\x04\x35\x6d\xd8\x51\x84\x98\xd0\xd5\x18\x6a\x08\xd4\x4b\x58\x2e\x61\x62\xef\xa2\x84\x84\xeb\xe8\xed\x90\x08\xd0\xc9\xef\x16\x13\x6f\xb3\x79\x94\xc8\xc5\xa7\xa4\x7a\x6e\x59\x53\x34\x81\xd7\x12\x36\x59\xbf\x03\x0c\x72\xe6\xdf\x03\x07\xaa\x21\x79\xe8\x83\xdf\x72\x4d\xb0\xe3\xa0\xa9\x18\xdf\xf5\x98\x78\xcd\x96\xd3\x1e\xd6\x94\x76\x44\x0e\x6a\xde\x6c\x28\x90\x4b\x72\xbe\x09\xd8\x75\xec\x1a\x20\xb7\xe5\xe0\x5d\x47\x2e\xc5\x0a\xe0\x03\x39\x0a\x98\xa8\xce\x25\xdb\xf8\x20\x0e\x0f\xa6\xc7\xc7\x21\xed\x7b\x36\x68\xed\x7e\x8a\x00\x87\xe4\x3b\x4c\x6c\xc0\x78\xb7\xa5\x10\x35\x7e\x76\xc9\x83\xd3\x64\xc5\xdb\x59\x7a\x73\xb9\x05\x22\x77\xbd\xa5\x00\x5c\xf3\xe8\x61\x88\xd8\x50\x35\xeb\x8f\x8a\xac\x55\xff\x7b\x31\x97\xf0\x6b\x4c\x14\xb5\x9c\x5a\x45\xe9\x31\x6a\xfe\x96\x8d\xa6\x91\x7c\xcf\xa6\x02\xb8\xf3\xdd\x88\x0a\x01\x42\x1c\x28\xbe\x11\x67\xd7\x2f\xb5\xe2\x84\x21\xb5\xdf\x44\x90\xd4\xe5\x54\xf0\x39\x38\xf1\xe7\x7c\x82\x40\xcd\x60\x31\x28\xbc\x00\xa0\x4d\xa9\x7f\xb3\x58\x90\xab\x76\xfc\xc0\x3d\xd5\x8c\x95\x0f\xcd\x42\x3e\x2d\x7e\x24\xec\x57\x91\x8c\x77\xf5\x73\x8e\xdf\x7a\x1f\x6a\x76\x12\xec\xea\xb3\x63\x29\x1a\xda\xd5\xbd\x64\xfb\x0c\xeb\x8f\x2e\x51\x70\x1a\x2b\xda\xd5\xbb\xe4\x3b\x36\x93\xf1\x6b\x4d\x2e\x90\x02\xe6\xd0\xc3\x82\xd0\xa8\x85\x57\xdc\x4a\x29\x0d\x5a\x92\xef\xe3\xb3\xb2\x5c\xae\x5e\xec\x09\xc3\xcb\xe7\x9c\xfd\xeb\x60\x19\xdd\xaa\x5c\xf0\x1c\x93\x0f\x81\x1a\x1f\x7e\xab\xd5\xcf\xc1\x5b\xea\x13\x9b\xd5\x93\xf6\x85\x5f\x9d\x8f\x09\xb8\xeb\x7d\x48\xe8\x12\x98\xd6\xb3\x51\x79\xd8\xb5\x94\x5a\x0a\xc2\xa9\x09\xa4\x99\xdd\x98\x71\x35\xb8\xa4\x20\x62\xf3\x10\xc5\x5b\x64\x67\x84\xcd\x40\xbd\x37\x2d\xbc\x90\x1f\xd4\xe0\xe5\x1c\x7c\xc8\x56\x02\xd1\x85\x3a\x91\x72\x23\xf4\x18\x12\x1b\x81\x13\x1c\xe7\xf6\xa2\x7c\xc8\xf6\x15\xc0\x7d\x71\x06\x1d\xf6\x51\x08\x34\x04\x65\x5b\xf2\xd0\x62\xa8\x77\xd2\x56\x63\xbd\x79\x88\x73\x89\xde\xb4\x84\x3d\x24\x7f\xc2\xb1\xb9\x92\x03\xad\xf5\xbb\x08\x43\x94\x46\x67\xaa\x41\x1c\xd6\x29\xa0\x51\x98\x4b\x64\xc2\x9a\x21\x93\x6a\x08\x99\x9a\x8a\x84\xdb\xe3\xb8\xe4\x9e\x03\xed\x3b\x1f\x08\x22\x75\xe8\x52\xf9\x86\x50\xc0\xb4\x19\x6c\x05\x70\x7b\xa4\x01\xa3\x0a\x89\xc3\xa9\x48\x1a\xda\x49\xda\x8a\xd4\x63\xfa\xae\xf7\xca\x58\x5c\xfb\x6d\xe1\x6d\x51\xca\xaf\xf3\xe2\xee\xa7\xd5\x9f\xbe\x5b\x5e\xff\xdf\x83\x77\xfb\x98\xa8\x5b\x4d\xea\x22\xdc\x39\x54\x4f\xa4\xe5\xa0\xda\xbd\x67\x97\x74\x1c\xc8\xa1\x1d\xa7\x16\x06\x29\x38\x38\x74\x3e\x33\x1e\xfa\x40\x86\x25\xe5\x49\xd0\xc7\xaa\x4d\x3e\xa9\x16\x5c\x48\x56\xa5\xce\xb0\xa6\x8d\x54\x52\xe0\xb1\x49\x24\x20\xd9\xf0\x23\xd5\x19\x55\x82\x84\x96\xe0\x17\x0a\xfe\xa9\x00\xc5\x51\x46\xdf\x72\xb9\xbc\xbe\xd2\xbf\xfb\xe5\xf2\x8d\xfe\x55\xcb\xf2\xdf\xbf\xd4\x0d\x0b\x06\x48\x8d\xc4\x57\x5f\xf8\x02\x13\x5f\xa6\x7e\xbc\x55\xcf\x53\x77\xc2\x20\x23\xcc\x29\xd6\x1f\xd1\x24\xf8\x76\xb9\x04\x51\x00\x30\x7b\x23\x03\x71\xb1\x00\x51\x3e\xc8\x75\x88\xda\xc9\xcb\xd8\x11\x06\xaa\x2f\xe7\x40\x2e\x0e\x41\xc0\xa5\xf3\xd5\x79\xb0\x87\xc3\x90\x70\x6d\xb5\x48\x8e\x0c\xc5\x88\x61\x2f\xee\x04\x94\x2c\xfa\xd6\x07\xca\x72\x7c\x18\x92\xac\x52\x1f\xb9\x63\xe1\x51\xf2\xf0\xc1\x6b\x57\x2a\x29\xcf\x1c\xd6\x43\x02\xb4\x3b\xdc\xc7\x32\xbd\x3f\xdf\xdf\x82\xf5\x66\x72\x53\x50\xd1\x78\x8b\xae\x51\x3c\xf4\x0f\x8d\xf2\x74\xf1\xbb\x51\x40\xff\xc7\x55\x3a\xda\x5c\x96\x5c\xb8\x1c\x1c\x3f\xea\xd5\x97\xf9\x5a\x85\xc5\xa1\x29\x79\x2d\xa8\x01\x93\x78\xd3\x82\x5d\xcb\x98\x51\x99\x69\xd1\x8d\x5f\xdd\xfc\x71\x59\x1a\x34\x72\x35\x8d\x3d\xcf\x0d\x4f\x5e\xf6\x91\x21\x66\xf0\xa0\xf8\x1a\xf5\x00\x04\x06\x61\x3f\x1f\xb5\x88\x13\x70\x74\xdf\x24\x40\xd8\xa2\xe5\x3c\x17\xb5\x94\x1d\x3a\x19\xd4\xc2\x78\x83\x16\xb0\xcf\x24\x9b\x78\xfe\x55\x9a\x7c\x76\xfc\x98\x49\x92\xf6\x3d\xe5\x98\xde\x8f\xf0\x55\xde\x94\x0f\x5f\x40\xd3\x62\x2f\x51\x1f\x61\x3d\xaf\x23\x69\xe7\x33\xa1\x62\x61\xd4\x5c\x6b\x27\xce\xbe\xc6\x2a\xbd\x7f\xba\x2d\xa6\x30\x98\x04\xff\x99\x5d\x2c\x16\x70\x37\x42\xef\x2c\x84\x82\xc8\x11\x09\x25\x92\x91\x57\x01\x5d\x93\x09\xea\x87\xa6\xb5\x7b\xf5\xf4\x6a\x71\xf5\xfa\x66\x09\x6b\xb6\x56\x6e\x91\x1e\xc5\x39\x58\x0c\x4d\x69\x9b\xe6\x16\x13\x77\x2a\x53\xb2\xa0\x8c\xcb\xc5\x90\x67\x38\x55\xb3\x8b\xbb\xe9\xe2\xf4\xdd\xb7\xea\xf7\x93\xa4\x74\x1e\xdf\x66\x54\xe1\xbc\x22\x16\x4e\x08\x4b\x0e\x05\x08\xa4\x1a\x94\xc3\xfe\xdb\x10\x93\xba\x5b\x53\x49\x8a\x9d\xb1\x43\x94\x6d\x32\xe7\x53\xaa\xfc\x6a\x71\x75\x73\x73\x33\x1f\xff\xaf\xc4\x4a\x2d\x3f\x3a\x70\x3e\x74\x68\xf9\x17\xaa\x05\x1e\xdd\xfc\x20\xfb\x60\x29\xc6\x9c\xa6\x77\x34\x05\x14\xe8\x44\xc4\x14\xe8\xcb\x93\xc2\x8b\x9e\xbf\x5a\x5c\x69\x96\x15\xc0\x0f\xb2\x5e\x4c\x4e\x8f\x5c\x09\x1a\x7d\xa0\x79\x6e\x0f\x37\x4e\x32\x57\x2b\x75\xd7\x0d\x31\x41\x87\xc9\xb4\xc5\xb3\x4e\xd3\x35\xc1\xb2\x9a\x5d\xe4\x1a\xb2\x4b\xbf\x7f\x3d\xfb\x55\xb1\xf7\x4f\x0e\xf4\x9e\xb0\xb6\xec\xbe\x90\xc6\xba\x7c\xaf\xc3\xd7\x81\xef\x29\x07\x34\x97\x69\x1f\x48\x0f\x4d\x5f\x02\xeb\x58\xa7\xc7\x9e\x4c\xde\x1e\x41\xb6\xa3\xd8\x16\x89\x3e\x76\x39\x02\x48\x24\xca\xd5\x54\xe7\x85\x55\x90\x94\xe7\xbc\xb1\x4c\x4e\x59\x9f\x3c\x44\x12\x46\x4e\xc1\x64\x21\x3d\x8a\x25\xe2\x5e\x0b\xd4\xb1\x93\x49\xb3\x09\xbe\x83\x4b\xe7\x77\x97\x79\x7e\x47\x12\x95\xcc\xa2\x3d\x39\x49\x5e\xd1\x12\xb6\x14\xc6\x50\xf2\x07\x09\xe1\x89\x0c\x4e\x13\xcd\xf9\x68\x74\xc7\x29\x8d\xaa\xf7\x93\x13\xd7\xec\x1a\x2b\xbf\x6d\xd9\xd0\x3c\x2b\xcb\xb8\x3c\xc4\x74\xba\x23\x1d\xa5\x86\x27\x33\x33\xcf\xfb\x8e\xde\x4a\xb5\x33\x54\x55\x90\x9c\xdf\x41\x20\x34\x2d\x9d\xb6\x69\x7e\xda\xb4\x16\x35\x15\x79\xe8\xa8\x46\xfd\xc5\xef\x48\x32\x54\x67\x52\x14\x99\x28\x47\x97\x4f\x6f\x1d\x8d\x39\x66\x8c\xf6\x3e\x89\x5c\xa3\xcd\xcb\x12\xc4\x07\xda\x49\x3a\xe2\x90\x85\x74\x89\x5c\x5e\x65\x82\x5f\x0f\xe7\xa9\x9d\xc4\x93\x17\xba\x22\x3e\x87\x2e\xe5\xfa\xeb\x46\x28\x58\x28\xcb\x14\x9d\xcd\x79\x35\xe0\xa4\x6f\x0a\xf9\xec\x37\xa5\xc9\xbb\x96\x6d\x46\x57\x20\x43\xa2\x20\xe5\x21\x37\x79\x99\xd6\x90\x03\xa4\x8b\x3b\xbf\x73\xe7\x2e\x4f\x46\xe5\xe9\x8b\x0b\x6a\x4f\x79\x44\x98\xbc\xd1\x0a\x5e\xfb\xe0\x7b\x6c\xc6\xdf\xc9\xe2\x3e\x4f\x33\x39\x9a\x67\xf7\x88\x15\x3c\xab\x88\x8e\xa4\x71\x4b\x2b\xa1\xe7\x57\x93\x3c\xaa\x2c\x1f\xeb\x65\x31\xd2\xc2\x17\xd6\x8c\xb6\x99\x2d\x15\x88\x32\xe9\xa4\x32\xbe\xeb\x44\xe0\x0d\x39\x0c\xec\x73\x0d\xbe\x88\x72\x24\x6c\xec\xd0\xda\xfc\xee\x1d\xdf\xc4\x7a\xfa\xc9\xc6\x77\xf8\x90\xf7\x10\x7d\x2b\x8e\xcb\xf0\x7a\x50\x38\xd0\x66\x43\x46\x1f\xe5\xd8\xf7\xc1\xa3\x69\x4b\x1d\x4f\x34\xe6\xb0\x01\xb7\x8a\x88\xfc\xb6\x3d\x2f\xb3\x9c\xa0\x1a\x0e\x56\x52\x3c\xb9\x54\xb7\xe0\xa9\x9d\x79\x63\xd9\xb5\x6c\xda\xc3\xfb\x39\xbf\xaa\x29\x88\x32\x97\x29\xa6\xc0\xca\xff\x72\x70\x0c\x91\xc3\x8e\x7d\x84\xc7\x3c\x26\x4f\x82\x3e\x19\x95\x3f\x04\xdf\x7d\x52\x0e\x3e\xad\x96\x5f\x01\xfa\x3b\xd9\x3f\xc4\x47\xec\xc9\x30\xda\x2b\x83\x71\xe4\xed\xf2\x60\xc2\xae\xd6\x15\x3e\x4e\x98\x09\x34\xe2\xa2\x5c\xf2\x16\xb8\xa2\x4a\x65\xed\xe2\x58\xd7\x38\xc2\x25\x3b\x51\xad\x44\x97\xd5\xec\xa2\xc4\x3a\xed\x1b\xbf\xce\xfe\x1b\x00\x00\xff\xff\xec\x04\xfd\xa5\x23\x12\x00\x00")

func timeTimeVdlBytes() ([]byte, error) {
	return bindataRead(
		_timeTimeVdl,
		"time/time.vdl",
	)
}

func timeTimeVdl() (*asset, error) {
	bytes, err := timeTimeVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/time.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x8b\xdb\x40\x0c\x3d\xdb\xbf\x42\xf8\xb4\x0b\x61\x0c\xed\xcd\xd0\x43\xd9\xc0\x92\x7e\x78\x0b\x49\x5b\xe8\x4d\xf5\x28\xce\xb4\xf6\xc8\x1d\xcb\x5e\x96\x90\xff\x5e\xe4\x49\x42\xb2\x4d\x0a\x4b\x7b\xb0\xb1\xa5\xa7\xf7\xe6\x49\x62\xf2\x1c\x56\x1b\x82\xd1\x36\xa6\x62\xbf\x76\x35\xac\x5d\x43\xb0\xe6\x00\xb2\x21\xe8\x05\xbd\xc5\x60\x41\x5c\x4b\xd0\x61\xf5\x13\x6b\x82\x88\x1c\x02\xf5\xe0\xac\xe3\x16\xc5\x55\xe0\x51\xdc\x48\x69\x9e\x83\x3c\x75\x9a\xf1\x40\x58\x6d\xa0\x26\x4f\x01\x85\x2c\x34\xe8\xeb\x01\x6b\x32\xe9\x5e\xea\x8d\xea\x0a\x73\x63\xee\xa6\xc0\x36\x4d\xee\xb9\x80\x6d\x9a\x24\x5f\x5d\xa0\x15\x97\x13\xe7\x4a\xf9\x62\x38\xc9\x73\xf8\x32\xff\x30\x1d\xc7\xcc\x87\x80\xe2\xd8\x83\xeb\x21\x50\x17\xa8\x27\xaf\x3a\xd8\xc3\x3d\x9f\x43\x8c\xd6\x66\x87\xbf\x6c\x4f\x96\xbc\x77\xde\x16\x00\x00\xe5\xd0\x7e\xa7\x30\x9b\x82\x2a\x37\x05\xb3\x33\x8a\x2c\x66\x17\x6d\xc7\x41\xf4\x38\xdb\x4f\x28\x9b\x22\xa2\xb2\x19\x94\xd8\xd2\xe1\x6f\xb7\x8b\xe0\x6f\x14\x78\xa2\xda\x7e\x64\x4b\x05\x7c\xf6\xee\xd7\x40\x31\x19\xdf\xa7\x7e\x56\xda\xe3\xeb\x5e\x34\x1d\x7d\xe8\xd7\x9f\x1e\x96\x12\x86\x4a\x2e\x7a\x98\x0a\xfe\xc3\xf9\xef\xd0\xb3\x77\x15\x36\x33\x58\xf4\x31\x99\x99\xf8\x75\x73\x9b\x5d\xf3\xa5\xb3\x9c\x13\xda\xc6\xf9\x4b\xfe\x14\x17\x97\x67\x3f\xb3\x3d\x34\x7a\x3d\x2d\x7e\x91\xe7\x63\xd1\x35\xdf\xa3\x71\x9c\x8f\xaf\x5e\xe7\xa3\x6d\x02\xb3\xe4\xff\xda\x88\x69\x40\x97\xba\xa1\x2f\x7d\xde\xe1\x88\x7f\x5f\xef\xd3\x15\xcd\x38\xd4\xe6\x07\x5b\x34\x17\xf6\xf0\xb0\x03\xcf\x41\x28\x74\x1c\xf6\x41\x76\xf9\xe8\xd6\xf2\x02\xdd\x72\xa9\x14\x0b\x2f\x14\x46\x6c\x9e\xe9\x95\x4b\xd5\x38\xe3\xd7\x3b\xe4\x61\xfe\x70\x23\x6c\xed\xe3\x6d\x01\x6f\xad\x3d\x0e\xf4\xa9\x23\xe8\x87\x4e\x7b\x3f\x5d\x2a\xda\x82\xbe\x0a\xae\x13\x93\xee\xd2\xdf\x01\x00\x00\xff\xff\x46\x95\x86\x66\x7e\x04\x00\x00")

func timeVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_timeVdlConfig,
		"time/vdl.config",
	)
}

func timeVdlConfig() (*asset, error) {
	bytes, err := timeVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vdltoolConfigVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x5f\x73\xdb\x36\xb6\x7f\x96\x3e\xc5\x19\xcf\x9d\xb9\x76\x46\x25\xef\xed\xbd\xbb\x0f\xde\xe9\x43\x6a\x27\x1e\x77\x53\x27\x1b\xdb\xe9\xce\x76\xfa\x00\x91\x47\x12\x62\x12\x60\x01\x50\xb2\x9a\xc9\x77\xdf\x39\xe7\x00\x24\x28\x3b\x71\xd3\xed\x53\x9b\x87\x58\x22\x81\xf3\xf7\x77\xfe\x01\x2a\x4b\x38\xb3\xdd\xde\xe9\xf5\x26\xc0\xd7\xff\xf3\xbf\x7f\x81\x9b\x0d\xc2\x3b\x65\x54\xad\xfb\x16\x9e\xf7\x61\x63\x9d\x2f\xe0\x79\xd3\x00\x2f\xf2\xe0\xd0\xa3\xdb\x62\x5d\xcc\xcb\x12\x6e\x3d\x82\x5d\x41\xd8\x68\x0f\xde\xf6\xae\x42\xa8\x6c\x8d\xa0\x3d\xac\xed\x16\x9d\xc1\x1a\x96\x7b\x50\xf0\xed\xf5\xf9\x57\x3e\xec\x1b\xa4\x5d\x8d\xae\xd0\x78\x84\xb0\x51\x01\x2a\x65\x60\x89\xb0\xb2\xbd\xa9\x41\x1b\x08\x1b\x84\x57\x97\x67\x2f\xae\xae\x5f\xc0\x4a\x37\x58\xcc\x69\xcb\x1b\x55\xdd\xa9\x35\xc2\xb6\x6e\x82\xb5\x0d\xd4\xb8\xd2\x06\x3d\x84\x7d\x87\x1e\x7a\x2f\x7c\x68\xef\xb6\x6e\x80\x97\xe8\xe0\xb1\x59\x2d\x40\x9b\xaa\xe9\x6b\x6d\xd6\xf4\x9a\x68\xad\xac\x6b\x55\x20\xb9\xb7\x75\x53\x54\xd6\xac\xf4\x9a\x59\xf9\x62\xde\x4d\xf9\x30\xef\x33\x59\xe1\x3b\xac\xf4\x4a\x13\xd3\x0d\xa9\x49\x0f\x7b\xa7\x82\xb6\x86\x48\x4e\x98\x17\x00\x37\x64\x13\xcd\x12\xea\x4a\x35\xcd\x9e\x48\x39\xec\xc8\x7e\x26\x20\xeb\x6a\x3b\xda\xad\x1a\x38\x1a\x25\x39\x12\x51\xe8\x35\xaa\x6a\xc3\x24\xa3\x69\xa3\x70\x05\xc0\x0b\x55\x6d\x88\xde\x81\x02\xa0\xdb\xae\xd1\x95\x0e\xcd\x9e\x3e\x5a\x17\xbc\xf8\x26\xdb\x59\xac\x0b\xd8\xdb\x1e\x5a\xb5\x07\x87\x2b\x74\x10\x6c\x24\xc5\x92\x47\x6d\xa3\x27\x1e\x08\x06\x3b\x1d\x36\xb6\x0f\x80\xf7\x07\xac\xc8\xc2\x89\xc8\x9c\xfc\x32\x18\x2e\xb8\xbe\x0a\xf0\x61\x3e\x2b\x4b\xb8\x40\xf3\x4a\x99\x75\xaf\xd6\xc8\x58\x0a\x4e\x57\x41\x4c\xea\x91\x9d\xc2\x00\x5a\xa3\xc1\x68\xdb\x26\x2d\x2f\x00\x2e\x57\xc3\x4a\xed\x99\x1e\xb6\x5d\xd8\x2f\x40\x35\x0d\xf8\xbe\x23\x39\xb0\x1e\xb7\x80\x72\x48\xef\xec\x0e\x6b\x08\x96\x80\x16\x29\x13\x80\x67\x13\x61\x3c\x86\x1f\xb3\x07\x3f\xcd\x99\x7e\xfa\xfa\x55\x74\x7f\x35\xf5\xbc\x27\x2a\x16\xd2\xbf\x0b\x2b\x3a\xcf\x67\xdf\xa9\xad\x8a\x0f\xe9\x63\xfe\xd8\x57\x4e\x77\x01\xc6\x8f\xe9\xe5\xf5\x4e\xaf\x82\xec\xe1\x8f\xf1\xf9\x47\x46\x61\x26\x1a\xa0\xe9\x5b\x56\x42\x0c\x77\x67\xec\xce\x7c\xc6\x6e\xe2\x8d\x43\x02\xe4\x90\x0b\x2b\x22\xe5\x82\x45\x39\x12\x5b\xfb\x00\xfe\x6b\x0b\x8f\x1b\x23\x31\xb2\x8f\x39\xfe\x07\xed\xf0\xc6\x5e\xa9\xa0\xb7\x78\xc3\x51\x3b\x0d\xa8\x56\x75\x1d\x41\x68\xe5\x6c\x0b\x0a\xde\x9d\xbf\x82\x9d\x76\xc8\x11\x4e\xae\xd3\xc1\x03\x89\x5b\x96\x60\x98\x88\xbc\x19\x22\x4a\x24\x18\xe3\xce\x29\x87\xcd\x5e\x52\x83\x32\x35\xa0\xf2\x7b\xa2\x93\x24\x46\x26\xa5\x4d\x65\x9d\xc3\x2a\x34\xfb\xbf\x41\xef\xc9\x36\xda\x43\xd5\x3b\x87\x86\xa0\x9d\x10\x2a\xf0\x89\x61\xe4\x25\x73\x11\xb6\xc6\x28\x60\x72\xbb\x8d\x0e\xd8\x68\x2f\xf0\x2a\xcb\x4f\x68\x4e\x3b\x5b\x54\x26\x70\xe2\xf0\x15\x1a\xe5\xb4\xf5\xb0\xdb\x20\x69\xcc\xff\x6b\x0f\xca\x80\xae\xb5\x6d\x55\xd0\x55\xd2\x9d\x95\x66\xa5\xb4\xa1\x38\x76\xec\xf7\x05\x2c\xfb\xc0\x61\x6d\x90\xf4\x05\x1f\x94\xa9\x95\xab\xd9\x8e\x53\x1b\x31\x4f\x32\x2d\xd3\xab\x6c\xdb\xa9\xa0\x97\xba\xd1\x61\x9f\xf2\x03\xf9\x83\x36\x06\xdd\x0e\x59\x67\x48\xb9\xe7\x29\xe9\x91\x55\x6f\x68\xc5\xca\x3a\xd1\x9e\xfc\x35\x21\x28\x72\xed\x10\x76\xa4\x2c\x91\x1d\xc2\x4f\xf0\x1a\x2c\x29\x23\x41\x9d\x44\x4e\x9a\x66\xcc\x47\x63\x52\x7d\xba\xc3\xbd\x54\x1d\x46\x0d\x27\xd9\x0d\x82\x51\x2d\xa6\xc7\x2c\x3c\x59\xea\x58\xdd\x29\x71\xc0\xbe\xc3\x93\x05\x39\xa8\xda\x40\xdb\xfb\xc0\xd4\x96\x49\xad\xa1\xf4\x50\xba\x4d\x1a\x2b\xef\x6d\xa5\x59\x58\xca\x7a\xe9\x7d\x9e\x71\xa7\x82\xe5\x21\x68\x1d\xed\xef\xdb\x08\x6f\xbc\x27\x54\x98\x8a\x45\x54\xd0\x29\xed\x24\xd9\x99\x2d\x3a\xcf\x6e\xe9\x4d\xc5\x29\x25\xfa\x85\x5e\x70\x52\x5d\x62\xd8\x21\x8a\x78\x6c\x62\x32\x7c\x16\x03\x7e\xc1\x4f\x76\xba\x69\x40\xf5\x41\xf0\x42\x15\x07\xe8\x7f\xa6\x46\x52\xbf\xc5\x35\x89\xe0\x04\x88\x83\x46\x1e\x07\xce\x6c\x42\x3f\xaa\xf4\x9c\xe4\x8f\x85\x73\x62\xde\x64\x50\x32\xfd\x4b\x6b\x4f\x79\x35\x30\x1d\x58\x59\x9b\xc0\x7e\x7c\x4f\x6f\x17\x60\xe0\x99\x3c\x38\x01\x74\x2e\x82\x65\x5c\xfe\xd2\xd9\x76\xd8\xf0\x2c\xee\x38\xd8\xf0\x30\x86\x5a\xd5\xfd\x48\xb1\x69\xd6\x3f\x5d\x58\x7a\x34\x24\x2c\x96\xac\x46\xca\x66\xcb\x68\xfd\x0b\x2b\x70\xd0\x46\x8a\x3f\xc3\xf7\xc0\xbb\x6a\x40\x0d\xb7\x36\xd7\x88\xb0\x2d\xb4\x2d\xef\x4b\x87\xab\xb2\xd1\xcb\x72\x5b\x37\x65\x40\x1f\x6a\x15\x54\x19\x1d\x40\xc1\x84\xf7\xaa\xed\x9a\x31\xd1\x8a\x04\x93\xec\xf7\x77\x4d\xdd\x4d\x4c\xd7\xf4\xd9\xae\xe0\x86\x59\xcd\xf8\xd5\x85\xa5\x3f\x02\xa4\x68\xd8\x5c\xee\x18\x26\xda\x1c\xc4\x0f\x75\x37\x3e\xa0\xaa\x0f\x81\x5f\xcc\x67\x49\x08\x6d\xd6\x4c\xf7\x5f\xe8\x6c\x96\x73\x7f\xa1\xaf\x5b\xd5\xf4\x5c\x4e\x19\x68\x84\xa2\x6a\x83\xd5\x9d\xa0\x6e\xa3\xb6\xda\xba\x62\x3e\xe3\x9d\x17\x96\xfe\x88\x84\xd1\x11\xbc\x61\xf4\x1e\x50\xc7\xe7\x74\x8d\x63\x3c\xfa\x24\x57\xb4\xd6\x08\x77\x26\x34\x40\x5e\x4a\x7b\x6f\x92\x78\xf5\x82\x77\xd5\xb8\x52\x7d\x13\xc6\x75\x9c\x39\x23\x49\xf2\x64\x42\x5e\x02\xe4\x80\x3c\x8e\x93\xf4\x74\x91\xd8\x3f\x1b\x01\x34\x85\x62\x5a\x99\x41\x91\x29\x3c\x7b\x40\xe2\x11\x0a\x83\x39\x92\xb1\x33\x93\x64\xf6\xbf\x8c\x0d\x99\x92\x14\x4f\xbe\x4d\x3d\x1a\xf7\x61\x94\x1c\x86\x2e\x56\x78\x7e\xc2\xd0\x62\x3b\x8d\x4d\xcd\x86\x8b\x8d\x22\x3f\x58\x3c\x4c\xa7\x8d\xad\xd4\x98\xd3\xc8\x2b\x92\x2f\xc4\xd6\x52\xb7\x68\x83\x08\x33\x2c\xa4\x22\x34\xd4\x83\x04\x9c\x7d\xee\x4c\x41\xa6\x6e\xb1\xa0\x2a\x90\x5c\x21\xe8\xff\x10\xbf\x01\x23\xff\x94\x5b\x1a\x8e\x87\xc5\xf0\x82\x96\xf1\x8b\xa3\x81\xc6\xd1\xf8\x96\xc0\xc6\x6f\x3f\x7c\x6f\x6b\x3c\x85\x33\x65\xac\xa1\xb4\xb6\x80\x4b\x2f\x2f\x8f\x0a\xf9\x74\x7c\x72\xf4\x71\xdc\x18\xcd\x7c\x0a\x1f\x3e\xbc\x51\x61\x73\x2a\xe4\x8f\x16\x70\xa5\x5a\x4c\xdf\x3e\x0e\x1b\x3e\xce\x67\xc9\x31\x3f\xfe\x74\x61\xe5\xf3\x90\x4a\x38\x36\xa7\xa9\x24\x45\x6f\x0c\xcd\x21\xe6\x79\x69\xea\xab\x44\xd7\xf9\xec\x5b\x9a\x21\x66\x57\x7d\xbb\x44\xc7\x4f\x19\x0c\xcf\x9d\x53\xfb\xf9\xec\x9a\xe6\xa0\xf9\xec\x7b\xd5\xcd\x67\x6f\xac\x36\x81\xd6\x5c\xae\x54\x35\xa6\x32\x11\x27\x93\x60\x00\x4d\x9e\xca\x06\x19\xe2\xf2\x49\xe6\x21\x23\xa4\x74\x92\x7c\xdb\x29\xce\xfd\x2a\x40\x6f\xf4\xcf\x3d\xf5\x49\xba\x46\x13\xc6\x6e\x4c\x98\x60\x9d\x15\x60\x26\x94\xe1\x99\xec\xf9\x58\xed\x4d\x4c\x06\x8a\x0c\x6a\xda\x5d\x00\x9c\xf7\x9c\xcc\x2e\xac\xa4\x02\xc3\x51\x2d\xbe\xd0\x61\x32\x2e\xc1\xfb\xde\x4b\xcb\xb0\x54\x1e\x13\x03\x22\x23\x4d\x05\xcd\x2f\x4b\x19\x05\x08\x9e\xb6\xc5\xb0\x49\xa2\xd5\x7a\xc5\x01\x15\x40\xaf\x1e\x55\x07\x6a\x8b\xde\xfc\x37\xf5\x5f\x34\x1c\x1c\xc8\x53\xcc\x67\xac\x5c\x54\x36\x39\x83\xd3\xe0\xc4\x15\x59\x0e\x1d\xd3\x65\x59\xd2\xf2\xb7\x2f\xfe\x71\x7b\xf9\xf6\xc5\xf9\x29\xbc\xd0\xd4\xd0\x01\xc1\x18\xbe\xf9\x06\x6e\xd9\xe2\x60\x5d\xc4\x31\x29\xed\x31\x14\x00\x3f\xa0\xd4\x70\x63\x03\x74\xe8\xc8\xbd\xf3\xa1\xdb\x2d\x63\x73\x95\xf2\xa7\xe7\x5e\x96\x92\x75\x26\xc5\x58\x81\x24\xd9\x0f\x38\x60\xe6\xf2\x94\x3e\x4a\x3e\xf2\x07\x15\x41\xa5\x14\x42\xa6\xb4\x35\x89\x38\x74\x06\x0c\x16\x87\xa1\x77\xc4\xd9\xf5\x08\x7a\xc5\xa6\xcd\x1b\x72\xb1\xc4\xd0\x6d\xfa\xa1\x22\x8d\x12\x8e\xcd\xc5\xe5\x6a\x90\x20\x28\x0a\xbf\x58\x84\x6b\x1b\xe0\xb8\x38\x59\x44\x3c\x48\x0f\x95\x86\xb7\x28\x22\x89\x26\x42\x16\x43\xef\x25\x2f\x58\xfd\xe1\x6d\x94\x58\x9e\x52\xd3\x47\x34\x96\x32\x9f\x5f\x4c\x1b\x51\xb2\x3c\xd3\x52\x5d\xd7\x48\x9a\x1b\xc4\x73\x3c\xda\xa2\x5b\xaa\xa0\x5b\x92\x04\xef\x49\x45\x71\xc3\xb4\xc0\xc5\xda\xfb\x40\xc7\x84\x37\xd6\x35\x53\xf5\x73\x9a\x26\xdb\xef\x36\xd6\x8b\x9d\xbf\x4c\x1d\x6e\xff\xa4\x54\x0e\xa4\x98\x31\xd3\xf2\xda\xac\x1b\x04\xe5\xd6\x7d\x8b\xdc\x9c\xab\x10\x87\x8e\x51\xbd\xcf\x6a\x77\xf3\xfa\xfc\xf5\x71\xb0\x75\xbd\x3b\x39\x15\x17\x24\x36\x04\x5d\xda\x3a\x20\x9c\x54\xd7\xd4\x23\xb5\x7c\xf6\x51\xcc\x67\x13\xe3\x3e\x24\xf7\xbc\xa6\x29\xe6\x1a\x03\xaf\x8a\xb8\x94\xe6\x5d\x7b\x68\xf4\x5d\x72\x8f\x24\x83\x84\x4c\x25\x7d\x45\xa6\x00\xab\xe5\x31\x82\x31\x07\x62\x1e\xd6\x1c\x1f\xd3\x3c\xef\xb0\x91\x09\x7f\xa3\xbb\x49\x0b\x3e\x8d\xfb\x89\x81\xe6\x71\x40\x93\x02\xfb\x18\xfa\xb3\xf0\x64\x9e\xa9\x60\x94\x25\xdc\x1a\x99\xe3\xf3\xb1\x58\x85\x47\x58\x12\x96\x38\x49\x0c\x91\x36\x61\x25\x0d\x3f\xb3\xcb\x4e\xa1\xc6\x6e\x2a\x83\xa7\x91\xd3\xa1\x96\x11\x33\xce\x66\xe0\x29\x27\xa6\xf9\x2c\xa6\xa2\x4f\xe6\xa1\x34\xfd\xa5\x2e\x32\x4f\x47\x00\x37\x8f\x64\x29\xe2\xe5\xf0\xe7\x9e\xc7\xfb\xa4\xa3\xb8\x73\x6c\x6d\x1e\x4d\x43\x31\x57\xce\x67\xd1\x58\xbc\x7c\x68\x0d\x9e\x36\xdd\x43\x38\x47\xe3\xc8\xcc\x35\x10\x3a\x98\x98\xb3\xe6\x7a\x24\x26\xc8\xd3\xe2\x0a\x7a\x6d\x4d\xb3\x3f\xf0\xc0\xc3\xe3\x89\x61\xbe\x9e\x4a\x95\x24\x4a\x9d\xd0\xaf\x15\xeb\x97\x21\x04\x24\xc8\x26\x72\x50\x8c\x57\xc2\xc9\x83\x6a\xbc\x8d\xc1\xa1\xbd\x1c\x3c\x8c\x65\x92\x7a\xc4\x54\xfa\x9e\x02\xc7\x4a\xf9\x20\xe0\xe0\xc3\x8b\xa7\xbd\x3e\x9a\xe3\x73\x9e\xff\x35\x5e\x1f\x3c\x1d\x03\x86\x2b\xe9\x6f\x77\x3a\x5b\x2a\x26\xd6\xa7\xfd\xfd\x69\xe7\xb1\xd7\xd2\xb1\x08\xd3\x3b\x96\x54\xb5\x51\x9e\xbb\x97\x34\x7c\x86\xbf\xfe\xff\x49\xce\xfb\x13\x0e\xfd\x62\x27\x2c\x2d\xb5\x66\x8f\x4d\x71\x07\xf6\xe7\xc8\x21\xab\xc5\xec\x37\x1e\x4d\x66\x66\x7c\xaf\xb6\xea\xf3\x27\x7c\xf9\xb6\xdf\xfb\x8c\x4f\x8e\x23\xff\xac\xa7\x7c\x83\xf6\x7f\xdc\x73\x3e\xeb\xd6\xc5\x7b\x5b\xab\x82\xb8\x32\xbd\x3f\xc8\x21\x5f\x4c\x3e\x8f\x1d\xe9\x49\x3f\xb6\x24\x20\xcb\x21\x1c\xd6\x11\x98\x12\x6d\x99\x40\xc5\x13\x87\x5d\xb1\x63\x1a\x31\xb7\xef\xf0\x2d\xca\x61\xcb\x17\x44\x1b\x1b\x52\x42\x8e\x49\xf1\x7d\x45\x1e\x72\xb4\xe0\x00\xdd\x19\xa7\x27\xb1\x3d\xb2\xa3\x0d\xe9\x48\x73\xd5\xf0\x6d\x8f\x36\x3c\xb0\xc1\x4e\xed\x47\xa3\xe7\x12\x30\x93\x05\x60\xb1\x2e\x16\x51\xf4\x4b\x13\x70\x8d\x6e\x0c\x8e\xca\xf6\x4d\x4d\x36\xa5\xc5\x35\xbc\x8b\x0b\x58\xa0\xaa\x51\x8e\x70\x3e\xca\xbf\x41\x43\x90\x5d\x32\x0c\x98\xe7\x03\x2b\x2f\x24\xd7\xae\x50\x85\x3e\x5d\x1b\x79\xe8\x79\xd2\x52\x21\xa8\x6a\x33\x3d\xb4\xa2\xe7\x09\x83\x54\xf4\x5e\x8e\x47\x81\x0b\x8a\x05\xb9\x61\x63\x43\x3f\xaf\x2a\xf4\xfe\x15\x15\xde\xb4\x23\xfa\x3f\x58\x16\x24\x5b\x10\x5b\x47\xc3\xb0\x3f\x78\x17\x2c\x50\x2a\x38\x74\x96\x9c\xd6\x8e\xcb\x24\x00\x52\x20\x8f\x02\x5b\x33\xb8\xa6\x56\x41\xfd\x96\x80\x1b\x10\x94\x87\x19\x2c\x45\x84\xff\x38\xcc\x0e\x61\xf6\x10\xf7\x63\xdd\xca\xef\xce\x0e\xaa\x57\xbc\x61\x7b\xb2\x86\x4d\x49\xa4\x4a\x26\x2c\xb2\x1b\xb8\x8c\xba\xe7\x2b\xba\xc7\x09\xc7\x5b\xe0\xec\xba\x95\xe8\x5c\xd9\x10\x7b\x9d\x1a\x7d\xa7\x83\x44\x47\x4e\x5d\x6e\x81\xb9\x91\x06\x05\x6b\xbd\x45\x33\x98\x2d\x36\x12\x7e\x13\xc1\xce\x37\xb5\xe8\xf6\x5c\xf8\xc8\xce\x9d\x53\x55\xd0\x15\xa7\x3d\x04\x1f\xf8\x00\x01\xa5\x90\x51\x8b\xfc\xc0\x89\xa2\x41\x6b\xeb\x5e\x2e\xe3\x63\xde\x1a\xa5\x96\xc9\x07\x19\xde\x54\x0d\x9d\xed\xd0\x51\x8d\x35\x35\x3a\xae\x37\xe9\x08\x6a\x69\x7b\x2a\x3e\x64\x97\x38\x20\x11\xc1\xce\xd9\xf7\x58\x05\x5f\xae\x9c\x6a\x71\x67\xdd\x9d\x2f\x85\x9d\x4f\x87\x23\x3f\xd0\x10\x23\x4c\x97\x7b\x41\x0d\x77\x2e\x72\xc3\x4c\x63\x2b\xd6\x70\xc4\x92\xca\xce\xa3\xf8\x5b\x01\x6b\x82\xd2\xc6\xc3\x77\xb7\xd7\x37\xe9\x3a\x3f\x57\xee\x3a\x53\x0e\x62\x3e\x76\xd6\xf2\xbd\x32\x17\x51\x82\x70\xaa\xef\xc5\x24\x62\x89\x94\xe6\x55\xb0\x51\xdb\x31\x87\xc9\x6d\x3c\xf9\x86\x09\xfc\x93\xd3\x7f\xd4\xb1\x0c\xca\xad\x31\x24\x89\x6f\x97\xe8\x5e\x5a\x77\xa6\x82\x27\x6a\x2a\x40\x79\xeb\xd1\xf9\x52\x29\x67\x4d\xd9\x2f\x79\x92\xaa\x54\xf0\xe5\xb6\x6e\x16\x12\xe5\x95\x43\x15\x58\x91\xcf\x2d\x2e\x2b\xdb\x16\xf9\xb3\xcc\x38\x9c\x31\x58\x66\x1d\xe4\xd4\x2c\xda\x89\x88\x1e\x65\x42\x1d\x15\x64\x79\xe6\xca\xf5\x28\x10\x6b\x50\x66\x9f\x29\x1a\xb7\xa6\x20\x26\xd8\x6a\xea\x9c\xac\xdb\x13\x1f\xd6\xcb\xec\xc1\xf7\xcb\xf4\x9c\x8f\x8e\x08\x3d\x2e\x24\x37\x64\x3c\x27\x2e\x59\x40\xdf\x04\xdd\xaa\x40\x3d\x5b\x23\xfd\xea\x3c\x1e\x3f\x53\x3f\xa1\x1b\x74\x9f\xba\xcb\x62\xc0\xa0\xfc\x0a\x05\xf8\xa8\x8f\xdc\x65\xa9\x8d\xf2\x09\x90\xec\xa1\x3c\xf8\x2e\xc5\xa1\xb5\xa5\xd9\x28\x41\x8e\x0d\x60\xec\xd2\xd6\xfb\xa1\x2e\xab\x65\x23\xe5\x30\x23\x34\xe4\x76\x32\x05\xab\xb1\x10\xf5\x6b\xf9\x01\x05\x4b\x82\xa6\x86\xbe\x93\x9c\x86\xf7\xc1\x29\x68\xac\x59\x53\x01\xf2\xbe\xec\xee\xd6\xf1\x1a\xe4\xf8\xcc\xb6\x99\xfb\xae\xd1\x6d\x75\x85\xfe\x8d\xb3\x2b\x1d\x18\x7a\xe3\x3d\xce\xf4\x25\x43\xef\xbf\xde\x9d\xbf\x7a\xfb\xfa\xf5\xcd\x43\x18\xc4\xb5\x65\xc7\x8b\x4f\x52\x84\x45\xc5\x29\x49\x30\xc0\xc8\x5c\x2d\x19\xbf\x6b\xa6\x51\x32\x4d\x3b\x89\x8f\xd8\x88\xb1\xd4\x35\xaa\x62\x78\xe6\x88\x13\xac\xc4\x00\x6b\xec\x9a\xa7\xd3\x31\x1d\xc4\xc8\x1a\x4b\x61\x32\x3d\xf1\xe2\x4b\xb5\xed\xd7\xff\xc7\x8e\xe7\xb3\x2e\xbc\x8f\xa7\xb3\x41\x7c\x9c\x7e\x7f\x74\x66\x1d\xc2\x90\x45\xa4\xc7\x44\xca\x7e\xe2\x7e\x4e\x48\x03\xb9\xc1\x14\xf2\x0b\xa3\xad\xb8\x2d\x27\x97\xec\x3a\x92\x8c\xa5\x60\x92\xea\x7f\xef\x79\x46\x7e\x4c\xf1\xa7\x1d\x68\x46\xf5\xff\x98\x13\xcd\xd5\xf5\x39\xcd\xe3\xd6\xc1\xd5\x35\x91\xa4\x2e\xd4\x6d\xe5\x84\xe2\x4f\x37\xcb\x48\x62\xf9\xf2\x61\xe6\xe3\xfc\xdf\x01\x00\x00\xff\xff\xf9\x86\x52\x63\x89\x28\x00\x00")

func vdltoolConfigVdlBytes() ([]byte, error) {
	return bindataRead(
		_vdltoolConfigVdl,
		"vdltool/config.vdl",
	)
}

func vdltoolConfigVdl() (*asset, error) {
	bytes, err := vdltoolConfigVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vdltool/config.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"math/math.vdl":           mathMathVdl,
	"math/vdl.config":         mathVdlConfig,
	"signature/signature.vdl": signatureSignatureVdl,
	"time/time.vdl":           timeTimeVdl,
	"time/vdl.config":         timeVdlConfig,
	"vdltool/config.vdl":      vdltoolConfigVdl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"math": &bintree{nil, map[string]*bintree{
		"math.vdl":   &bintree{mathMathVdl, map[string]*bintree{}},
		"vdl.config": &bintree{mathVdlConfig, map[string]*bintree{}},
	}},
	"signature": &bintree{nil, map[string]*bintree{
		"signature.vdl": &bintree{signatureSignatureVdl, map[string]*bintree{}},
	}},
	"time": &bintree{nil, map[string]*bintree{
		"time.vdl":   &bintree{timeTimeVdl, map[string]*bintree{}},
		"vdl.config": &bintree{timeVdlConfig, map[string]*bintree{}},
	}},
	"vdltool": &bintree{nil, map[string]*bintree{
		"config.vdl": &bintree{vdltoolConfigVdl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
