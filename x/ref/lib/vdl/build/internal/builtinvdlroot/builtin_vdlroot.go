// Copyright 2020 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by go-bindata.
// sources:
// v23/vdlroot/math/math.vdl
// v23/vdlroot/math/vdl.config
// v23/vdlroot/signature/signature.vdl
// v23/vdlroot/time/time.vdl
// v23/vdlroot/time/vdl.config
// v23/vdlroot/vdltool/config.vdl
// DO NOT EDIT!

package builtinvdlroot

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mathMathVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xc1\x6a\xf3\x30\x10\x04\xe0\x73\xf4\x14\xf3\x02\xb1\xff\x38\xc6\xfc\xd7\x34\xcd\x21\x50\x7a\x68\xda\xde\xd7\xf2\xda\x12\x95\x25\x23\xad\x43\x4d\xc9\xbb\x17\xa5\x50\x72\x28\x94\x1e\x07\x76\x67\xbe\xb2\xc4\x3e\x4c\x4b\xb4\x83\x11\x54\xff\x36\x0d\x9e\x0d\xe3\x95\x3c\x75\x76\x1e\xb1\x9b\xc5\x84\x98\x0a\xec\x9c\xc3\xf5\x28\x21\x72\xe2\x78\xe6\xae\x50\x65\x89\x97\xc4\x08\x3d\xc4\xd8\x84\x14\xe6\xa8\x19\x3a\x74\x0c\x9b\x30\x84\x33\x47\xcf\x1d\xda\x05\x84\xbb\xd3\xfd\x3a\xc9\xe2\x38\x7f\x39\xab\xd9\x27\x86\x18\x12\x68\xf2\x68\x19\x7d\x98\x7d\x07\xeb\x21\x86\xf1\x70\xdc\x1f\x1e\x4f\x07\xf4\xd6\x71\xa1\xd4\x44\xfa\x8d\x06\xc6\x48\x62\x94\xba\x9a\xc7\xc9\xf1\x7b\x53\xe7\x21\x82\xfe\x8a\xf0\xf3\xd8\x72\xbc\xc6\x90\xb8\xcb\xb2\x6d\xb5\x6e\xad\x20\x32\x39\x50\x1e\x18\x69\xb0\x9e\xe2\x82\x89\xa2\xa4\x42\xc9\x32\xf1\x4d\x5f\x92\x38\x6b\xc1\x87\x5a\x3d\xe5\x97\xde\x05\x92\x6d\xa5\x56\xc7\x91\x86\xef\x74\xb9\x45\x6c\xaa\xff\xbf\x2a\x9a\xfa\x0f\x8a\x5c\xf8\x13\xa3\xa9\x6f\x19\x4d\xad\x2e\xea\x33\x00\x00\xff\xff\xce\xca\xd1\x3a\xbf\x01\x00\x00")

func mathMathVdlBytes() ([]byte, error) {
	return bindataRead(
		_mathMathVdl,
		"math/math.vdl",
	)
}

func mathMathVdl() (*asset, error) {
	bytes, err := mathMathVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/math.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mathVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x41\x4b\xc4\x30\x10\x85\xcf\xc9\xaf\x78\xf4\xbc\xb4\x28\x22\x12\xf0\xb4\x07\x0f\xe2\x9e\x2a\x82\xb7\x98\x4c\xd3\xc1\x34\xa9\xd9\x74\x51\x96\xfe\x77\x49\xa3\x7b\xde\xcb\x3b\x7c\xf3\xe6\x7b\x5d\x87\x7e\x24\x9c\xac\x6f\x4d\x0c\x03\x3b\x0c\xec\x09\x43\x4c\xc8\x23\x61\xd2\x79\xc4\xac\xcd\xa7\x76\x84\x5a\x58\x12\x1d\xc1\x96\xe3\xa4\x33\x1b\x04\x9d\xf9\x44\xc8\x3f\x33\x1d\x65\xd7\x81\x03\x48\x9b\x11\x8e\x02\x25\x9d\xc9\xc2\xeb\xe0\x16\xed\xa8\x95\x7f\x0b\x8f\x65\x2e\xc7\xe8\xdb\xfd\x06\xce\x52\x3c\x45\x85\xb3\x14\xe2\x8d\x13\xf5\xf1\xb0\x39\xfb\xa2\xac\x58\x34\xfb\x38\xcd\x9e\xbe\xef\xef\x1a\x85\x8a\xc4\x33\x07\xab\x70\x58\xa6\x0f\x4a\xbb\x8d\x94\x0f\x85\xc6\x5c\xba\x15\xbf\x53\x2a\xfa\x97\x68\x49\xe1\x35\xf0\xd7\x42\xeb\x76\xa9\xf9\xef\xbe\xb9\x7d\x68\xd4\x95\xee\xd2\xbd\x46\x5e\x62\xdd\xc9\x55\xfe\x06\x00\x00\xff\xff\x03\xf0\x4f\xb5\x68\x01\x00\x00")

func mathVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_mathVdlConfig,
		"math/vdl.config",
	)
}

func mathVdlConfig() (*asset, error) {
	bytes, err := mathVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _signatureSignatureVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x41\x8f\xd3\x3c\x14\x3c\x37\xbf\x62\x8e\xdf\x77\x20\x01\x24\xce\xa8\xec\xf6\x50\x09\xda\x4a\x2d\x5c\xaa\x1e\xdc\xf8\xc5\x31\x9b\x3c\x47\x7e\x2f\x2b\x55\x68\xff\x3b\x72\x12\xda\xd2\xa2\x15\xe2\x66\x3f\xcf\xcc\x9b\x99\x28\x45\x81\x87\xd0\x9d\xa2\x77\xb5\xe2\xfd\xdb\x77\x1f\xb0\xab\x09\xdf\x0c\x1b\xeb\xfb\x16\xf3\x5e\xeb\x10\x25\xc7\xbc\x69\x30\x80\x04\x91\x84\xe2\x33\xd9\x3c\x2b\x0a\x7c\x15\x42\xa8\xa0\xb5\x17\x48\xe8\x63\x49\x28\x83\x25\x78\x81\x0b\xcf\x14\x99\x2c\x8e\x27\x18\x7c\xda\x3e\xbe\x11\x3d\x35\x94\x58\x8d\x2f\x89\x85\xa0\xb5\x51\x94\x86\x71\x24\x54\xa1\x67\x0b\xcf\xd0\x9a\xf0\x79\xf9\xb0\x58\x6d\x17\xa8\x7c\x43\x79\x96\x28\x1b\x53\x3e\x19\x47\x10\xef\xd8\x68\x1f\x09\x96\x2a\xcf\x24\xd0\x53\x47\xc9\x55\x97\x8c\xb1\x7a\x76\xf0\xac\x14\x2b\x53\x12\x0c\x5b\xb4\xa4\x75\xb0\x17\xa6\xe4\x59\x77\xab\x36\xec\x58\x9e\x69\x96\xa4\x8c\xfe\x98\xd4\xeb\xeb\x9d\xa1\x82\xe1\x8b\x7c\x9e\xa5\xe5\x57\x3c\xd1\xd8\x97\x8a\x1f\xd9\x6c\x65\x5a\x02\x90\x26\x9e\x5d\x36\xdb\x3c\xb9\x8d\xd1\xfa\x7c\x7f\x0c\x25\xae\xdf\x17\xed\x91\xac\x00\xfb\xc3\x70\x02\x8a\x02\xab\x00\xe9\xa8\xf4\xa6\x41\x88\x96\x12\x30\xcf\x66\x5f\x86\x38\x82\xfd\x61\x3c\x25\xe4\x3a\x3d\x8f\x55\x4f\x69\xd9\xb4\x94\x67\x2f\x43\xae\x51\xf1\xf5\x4c\x94\x30\x96\xec\x5d\xb8\x91\xfc\xcf\xc1\x46\x07\x93\xd3\xbf\xac\x75\xca\x30\x19\x98\xb8\xf7\x0e\x70\xb7\xf3\x32\x59\xf2\x3c\x3a\x49\x93\xfd\x61\x1e\x1d\x86\xaf\xdb\xf5\x0a\x13\x5d\xdf\x12\xab\x64\xb3\x75\xaf\x13\xe8\x8c\x59\xf7\x7a\x03\x5a\xf2\x56\x23\x99\x16\xf8\x98\x30\x17\x21\x19\xc7\xff\x85\x4e\x7d\x60\xd3\xfc\x3f\x08\x4e\xe0\x33\x76\x12\xfc\x03\x78\x67\x46\x7f\x69\xbb\xe1\x13\x2e\x2d\xa9\x71\x32\xf5\x96\x64\x5e\x2b\x0d\xe2\xd9\x35\x74\x36\x3c\x55\x96\x68\x37\x7d\xfd\x56\xd5\xaf\xcb\x2e\x81\x13\x23\x1c\xbf\x53\xa9\xc9\xc3\x30\x1a\xfe\xe8\x6b\xd5\x97\xec\x67\x00\x00\x00\xff\xff\x7a\xf5\x7c\x0e\x29\x04\x00\x00")

func signatureSignatureVdlBytes() ([]byte, error) {
	return bindataRead(
		_signatureSignatureVdl,
		"signature/signature.vdl",
	)
}

func signatureSignatureVdl() (*asset, error) {
	bytes, err := signatureSignatureVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "signature/signature.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeTimeVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\xdf\x73\x1b\xb7\x11\x7e\x16\xff\x8a\x1d\xf5\x21\xf6\x98\x3a\x52\x6e\x9a\x56\xf6\x93\x2b\x27\xae\x3b\xa9\x93\xa9\xe4\x76\xa6\x2f\x9c\x25\x6e\x79\xb7\x23\x1c\x70\x05\x70\xa4\x98\x4e\xfe\xf7\xce\x2e\x0e\xc7\x1f\x56\x5d\x25\xa3\x3c\x90\xc4\x2e\xf6\xc7\xf7\x7d\xbb\xf0\x62\x01\xb7\xbe\xdf\x07\x6e\xda\x04\xaf\x97\xd7\x7f\x80\xfb\x96\xe0\x1f\xe8\xb0\xe6\xa1\x83\x77\x43\x6a\x7d\x88\x15\xbc\xb3\x16\xf4\x50\x84\x40\x91\xc2\x96\xea\x6a\xb6\x58\xc0\xe7\x48\xe0\x37\x90\x5a\x8e\x10\xfd\x10\x0c\x81\xf1\x35\x01\x47\x68\xfc\x96\x82\xa3\x1a\xd6\x7b\x40\xf8\xf3\xdd\xfb\xab\x98\xf6\x96\xc4\xca\xb2\x21\x17\x09\x52\x8b\x09\x0c\x3a\x58\x13\x6c\xfc\xe0\x6a\x60\x07\xa9\x25\xf8\xf1\xe3\xed\xf7\x9f\xee\xbe\x87\x0d\x5b\xaa\x66\x62\xf2\x33\x9a\x07\x6c\x08\x12\x77\x04\x35\x6d\xd8\x51\x84\x98\xd0\xd5\x18\x6a\x08\xd4\x4b\x58\x2e\x61\x62\xef\xa2\x84\x84\xeb\xe8\xed\x90\x08\xd0\xc9\xef\x16\x13\x6f\xb3\x79\x94\xc8\xc5\xa7\xa4\x7a\x6e\x59\x53\x34\x81\xd7\x12\x36\x59\xbf\x03\x0c\x72\xe6\xdf\x03\x07\xaa\x21\x79\xe8\x83\xdf\x72\x4d\xb0\xe3\xa0\xa9\x18\xdf\xf5\x98\x78\xcd\x96\xd3\x1e\xd6\x94\x76\x44\x0e\x6a\xde\x6c\x28\x90\x4b\x72\xbe\x09\xd8\x75\xec\x1a\x20\xb7\xe5\xe0\x5d\x47\x2e\xc5\x0a\xe0\x03\x39\x0a\x98\xa8\xce\x25\xdb\xf8\x20\x0e\x0f\xa6\xc7\xc7\x21\xed\x7b\x36\x68\xed\x7e\x8a\x00\x87\xe4\x3b\x4c\x6c\xc0\x78\xb7\xa5\x10\x35\x7e\x76\xc9\x83\xd3\x64\xc5\xdb\x59\x7a\x73\xb9\x05\x22\x77\xbd\xa5\x00\x5c\xf3\xe8\x61\x88\xd8\x50\x35\xeb\x8f\x8a\xac\x55\xff\x7b\x31\x97\xf0\x6b\x4c\x14\xb5\x9c\x5a\x45\xe9\x31\x6a\xfe\x96\x8d\xa6\x91\x7c\xcf\xa6\x02\xb8\xf3\xdd\x88\x0a\x01\x42\x1c\x28\xbe\x11\x67\xd7\x2f\xb5\xe2\x84\x21\xb5\xdf\x44\x90\xd4\xe5\x54\xf0\x39\x38\xf1\xe7\x7c\x82\x40\xcd\x60\x31\x28\xbc\x00\xa0\x4d\xa9\x7f\xb3\x58\x90\xab\x76\xfc\xc0\x3d\xd5\x8c\x95\x0f\xcd\x42\x3e\x2d\x7e\x24\xec\x57\x91\x8c\x77\xf5\x73\x8e\xdf\x7a\x1f\x6a\x76\x12\xec\xea\xb3\x63\x29\x1a\xda\xd5\xbd\x64\xfb\x0c\xeb\x8f\x2e\x51\x70\x1a\x2b\xda\xd5\xbb\xe4\x3b\x36\x93\xf1\x6b\x4d\x2e\x90\x02\xe6\xd0\xc3\x82\xd0\xa8\x85\x57\xdc\x4a\x29\x0d\x5a\x92\xef\xe3\xb3\xb2\x5c\xae\x5e\xec\x09\xc3\xcb\xe7\x9c\xfd\xeb\x60\x19\xdd\xaa\x5c\xf0\x1c\x93\x0f\x81\x1a\x1f\x7e\xab\xd5\xcf\xc1\x5b\xea\x13\x9b\xd5\x93\xf6\x85\x5f\x9d\x8f\x09\xb8\xeb\x7d\x48\xe8\x12\x98\xd6\xb3\x51\x79\xd8\xb5\x94\x5a\x0a\xc2\xa9\x09\xa4\x99\xdd\x98\x71\x35\xb8\xa4\x20\x62\xf3\x10\xc5\x5b\x64\x67\x84\xcd\x40\xbd\x37\x2d\xbc\x90\x1f\xd4\xe0\xe5\x1c\x7c\xc8\x56\x02\xd1\x85\x3a\x91\x72\x23\xf4\x18\x12\x1b\x81\x13\x1c\xe7\xf6\xa2\x7c\xc8\xf6\x15\xc0\x7d\x71\x06\x1d\xf6\x51\x08\x34\x04\x65\x5b\xf2\xd0\x62\xa8\x77\xd2\x56\x63\xbd\x79\x88\x73\x89\xde\xb4\x84\x3d\x24\x7f\xc2\xb1\xb9\x92\x03\xad\xf5\xbb\x08\x43\x94\x46\x67\xaa\x41\x1c\xd6\x29\xa0\x51\x98\x4b\x64\xc2\x9a\x21\x93\x6a\x08\x99\x9a\x8a\x84\xdb\xe3\xb8\xe4\x9e\x03\xed\x3b\x1f\x08\x22\x75\xe8\x52\xf9\x86\x50\xc0\xb4\x19\x6c\x05\x70\x7b\xa4\x01\xa3\x0a\x89\xc3\xa9\x48\x1a\xda\x49\xda\x8a\xd4\x63\xfa\xae\xf7\xca\x58\x5c\xfb\x6d\xe1\x6d\x51\xca\xaf\xf3\xe2\xee\xa7\xd5\x9f\xbe\x5b\x5e\xff\xdf\x83\x77\xfb\x98\xa8\x5b\x4d\xea\x22\xdc\x39\x54\x4f\xa4\xe5\xa0\xda\xbd\x67\x97\x74\x1c\xc8\xa1\x1d\xa7\x16\x06\x29\x38\x38\x74\x3e\x33\x1e\xfa\x40\x86\x25\xe5\x49\xd0\xc7\xaa\x4d\x3e\xa9\x16\x5c\x48\x56\xa5\xce\xb0\xa6\x8d\x54\x52\xe0\xb1\x49\x24\x20\xd9\xf0\x23\xd5\x19\x55\x82\x84\x96\xe0\x17\x0a\xfe\xa9\x00\xc5\x51\x46\xdf\x72\xb9\xbc\xbe\xd2\xbf\xfb\xe5\xf2\x8d\xfe\x55\xcb\xf2\xdf\xbf\xd4\x0d\x0b\x06\x48\x8d\xc4\x57\x5f\xf8\x02\x13\x5f\xa6\x7e\xbc\x55\xcf\x53\x77\xc2\x20\x23\xcc\x29\xd6\x1f\xd1\x24\xf8\x76\xb9\x04\x51\x00\x30\x7b\x23\x03\x71\xb1\x00\x51\x3e\xc8\x75\x88\xda\xc9\xcb\xd8\x11\x06\xaa\x2f\xe7\x40\x2e\x0e\x41\xc0\xa5\xf3\xd5\x79\xb0\x87\xc3\x90\x70\x6d\xb5\x48\x8e\x0c\xc5\x88\x61\x2f\xee\x04\x94\x2c\xfa\xd6\x07\xca\x72\x7c\x18\x92\xac\x52\x1f\xb9\x63\xe1\x51\xf2\xf0\xc1\x6b\x57\x2a\x29\xcf\x1c\xd6\x43\x02\xb4\x3b\xdc\xc7\x32\xbd\x3f\xdf\xdf\x82\xf5\x66\x72\x53\x50\xd1\x78\x8b\xae\x51\x3c\xf4\x0f\x8d\xf2\x74\xf1\xbb\x51\x40\xff\xc7\x55\x3a\xda\x5c\x96\x5c\xb8\x1c\x1c\x3f\xea\xd5\x97\xf9\x5a\x85\xc5\xa1\x29\x79\x2d\xa8\x01\x93\x78\xd3\x82\x5d\xcb\x98\x51\x99\x69\xd1\x8d\x5f\xdd\xfc\x71\x59\x1a\x34\x72\x35\x8d\x3d\xcf\x0d\x4f\x5e\xf6\x91\x21\x66\xf0\xa0\xf8\x1a\xf5\x00\x04\x06\x61\x3f\x1f\xb5\x88\x13\x70\x74\xdf\x24\x40\xd8\xa2\xe5\x3c\x17\xb5\x94\x1d\x3a\x19\xd4\xc2\x78\x83\x16\xb0\xcf\x24\x9b\x78\xfe\x55\x9a\x7c\x76\xfc\x98\x49\x92\xf6\x3d\xe5\x98\xde\x8f\xf0\x55\xde\x94\x0f\x5f\x40\xd3\x62\x2f\x51\x1f\x61\x3d\xaf\x23\x69\xe7\x33\xa1\x62\x61\xd4\x5c\x6b\x27\xce\xbe\xc6\x2a\xbd\x7f\xba\x2d\xa6\x30\x98\x04\xff\x99\x5d\x2c\x16\x70\x37\x42\xef\x2c\x84\x82\xc8\x11\x09\x25\x92\x91\x57\x01\x5d\x93\x09\xea\x87\xa6\xb5\x7b\xf5\xf4\x6a\x71\xf5\xfa\x66\x09\x6b\xb6\x56\x6e\x91\x1e\xc5\x39\x58\x0c\x4d\x69\x9b\xe6\x16\x13\x77\x2a\x53\xb2\xa0\x8c\xcb\xc5\x90\x67\x38\x55\xb3\x8b\xbb\xe9\xe2\xf4\xdd\xb7\xea\xf7\x93\xa4\x74\x1e\xdf\x66\x54\xe1\xbc\x22\x16\x4e\x08\x4b\x0e\x05\x08\xa4\x1a\x94\xc3\xfe\xdb\x10\x93\xba\x5b\x53\x49\x8a\x9d\xb1\x43\x94\x6d\x32\xe7\x53\xaa\xfc\x6a\x71\x75\x73\x73\x33\x1f\xff\xaf\xc4\x4a\x2d\x3f\x3a\x70\x3e\x74\x68\xf9\x17\xaa\x05\x1e\xdd\xfc\x20\xfb\x60\x29\xc6\x9c\xa6\x77\x34\x05\x14\xe8\x44\xc4\x14\xe8\xcb\x93\xc2\x8b\x9e\xbf\x5a\x5c\x69\x96\x15\xc0\x0f\xb2\x5e\x4c\x4e\x8f\x5c\x09\x1a\x7d\xa0\x79\x6e\x0f\x37\x4e\x32\x57\x2b\x75\xd7\x0d\x31\x41\x87\xc9\xb4\xc5\xb3\x4e\xd3\x35\xc1\xb2\x9a\x5d\xe4\x1a\xb2\x4b\xbf\x7f\x3d\xfb\x55\xb1\xf7\x4f\x0e\xf4\x9e\xb0\xb6\xec\xbe\x90\xc6\xba\x7c\xaf\xc3\xd7\x81\xef\x29\x07\x34\x97\x69\x1f\x48\x0f\x4d\x5f\x02\xeb\x58\xa7\xc7\x9e\x4c\xde\x1e\x41\xb6\xa3\xd8\x16\x89\x3e\x76\x39\x02\x48\x24\xca\xd5\x54\xe7\x85\x55\x90\x94\xe7\xbc\xb1\x4c\x4e\x59\x9f\x3c\x44\x12\x46\x4e\xc1\x64\x21\x3d\x8a\x25\xe2\x5e\x0b\xd4\xb1\x93\x49\xb3\x09\xbe\x83\x4b\xe7\x77\x97\x79\x7e\x47\x12\x95\xcc\xa2\x3d\x39\x49\x5e\xd1\x12\xb6\x14\xc6\x50\xf2\x07\x09\xe1\x89\x0c\x4e\x13\xcd\xf9\x68\x74\xc7\x29\x8d\xaa\xf7\x93\x13\xd7\xec\x1a\x2b\xbf\x6d\xd9\xd0\x3c\x2b\xcb\xb8\x3c\xc4\x74\xba\x23\x1d\xa5\x86\x27\x33\x33\xcf\xfb\x8e\xde\x4a\xb5\x33\x54\x55\x90\x9c\xdf\x41\x20\x34\x2d\x9d\xb6\x69\x7e\xda\xb4\x16\x35\x15\x79\xe8\xa8\x46\xfd\xc5\xef\x48\x32\x54\x67\x52\x14\x99\x28\x47\x97\x4f\x6f\x1d\x8d\x39\x66\x8c\xf6\x3e\x89\x5c\xa3\xcd\xcb\x12\xc4\x07\xda\x49\x3a\xe2\x90\x85\x74\x89\x5c\x5e\x65\x82\x5f\x0f\xe7\xa9\x9d\xc4\x93\x17\xba\x22\x3e\x87\x2e\xe5\xfa\xeb\x46\x28\x58\x28\xcb\x14\x9d\xcd\x79\x35\xe0\xa4\x6f\x0a\xf9\xec\x37\xa5\xc9\xbb\x96\x6d\x46\x57\x20\x43\xa2\x20\xe5\x21\x37\x79\x99\xd6\x90\x03\xa4\x8b\x3b\xbf\x73\xe7\x2e\x4f\x46\xe5\xe9\x8b\x0b\x6a\x4f\x79\x44\x98\xbc\xd1\x0a\x5e\xfb\xe0\x7b\x6c\xc6\xdf\xc9\xe2\x3e\x4f\x33\x39\x9a\x67\xf7\x88\x15\x3c\xab\x88\x8e\xa4\x71\x4b\x2b\xa1\xe7\x57\x93\x3c\xaa\x2c\x1f\xeb\x65\x31\xd2\xc2\x17\xd6\x8c\xb6\x99\x2d\x15\x88\x32\xe9\xa4\x32\xbe\xeb\x44\xe0\x0d\x39\x0c\xec\x73\x0d\xbe\x88\x72\x24\x6c\xec\xd0\xda\xfc\xee\x1d\xdf\xc4\x7a\xfa\xc9\xc6\x77\xf8\x90\xf7\x10\x7d\x2b\x8e\xcb\xf0\x7a\x50\x38\xd0\x66\x43\x46\x1f\xe5\xd8\xf7\xc1\xa3\x69\x4b\x1d\x4f\x34\xe6\xb0\x01\xb7\x8a\x88\xfc\xb6\x3d\x2f\xb3\x9c\xa0\x1a\x0e\x56\x52\x3c\xb9\x54\xb7\xe0\xa9\x9d\x79\x63\xd9\xb5\x6c\xda\xc3\xfb\x39\xbf\xaa\x29\x88\x32\x97\x29\xa6\xc0\xca\xff\x72\x70\x0c\x91\xc3\x8e\x7d\x84\xc7\x3c\x26\x4f\x82\x3e\x19\x95\x3f\x04\xdf\x7d\x52\x0e\x3e\xad\x96\x5f\x01\xfa\x3b\xd9\x3f\xc4\x47\xec\xc9\x30\xda\x2b\x83\x71\xe4\xed\xf2\x60\xc2\xae\xd6\x15\x3e\x4e\x98\x09\x34\xe2\xa2\x5c\xf2\x16\xb8\xa2\x4a\x65\xed\xe2\x58\xd7\x38\xc2\x25\x3b\x51\xad\x44\x97\xd5\xec\xa2\xc4\x3a\xed\x1b\xbf\xce\xfe\x1b\x00\x00\xff\xff\xec\x04\xfd\xa5\x23\x12\x00\x00")

func timeTimeVdlBytes() ([]byte, error) {
	return bindataRead(
		_timeTimeVdl,
		"time/time.vdl",
	)
}

func timeTimeVdl() (*asset, error) {
	bytes, err := timeTimeVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/time.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x8b\xdb\x40\x0c\x3d\xdb\xbf\x42\xf8\xb4\x0b\x61\x0c\xed\xcd\xd0\x43\xd9\xc0\x92\x7e\x78\x0b\x49\x5b\xe8\x4d\xf5\x28\xce\xb4\xf6\xc8\x1d\xcb\x5e\x96\x90\xff\x5e\xe4\x49\x42\xb2\x4d\x0a\x4b\x7b\xb0\xb1\xa5\xa7\xf7\xe6\x49\x62\xf2\x1c\x56\x1b\x82\xd1\x36\xa6\x62\xbf\x76\x35\xac\x5d\x43\xb0\xe6\x00\xb2\x21\xe8\x05\xbd\xc5\x60\x41\x5c\x4b\xd0\x61\xf5\x13\x6b\x82\x88\x1c\x02\xf5\xe0\xac\xe3\x16\xc5\x55\xe0\x51\xdc\x48\x69\x9e\x83\x3c\x75\x9a\xf1\x40\x58\x6d\xa0\x26\x4f\x01\x85\x2c\x34\xe8\xeb\x01\x6b\x32\xe9\x5e\xea\x8d\xea\x0a\x73\x63\xee\xa6\xc0\x36\x4d\xee\xb9\x80\x6d\x9a\x24\x5f\x5d\xa0\x15\x97\x13\xe7\x4a\xf9\x62\x38\xc9\x73\xf8\x32\xff\x30\x1d\xc7\xcc\x87\x80\xe2\xd8\x83\xeb\x21\x50\x17\xa8\x27\xaf\x3a\xd8\xc3\x3d\x9f\x43\x8c\xd6\x66\x87\xbf\x6c\x4f\x96\xbc\x77\xde\x16\x00\x00\xe5\xd0\x7e\xa7\x30\x9b\x82\x2a\x37\x05\xb3\x33\x8a\x2c\x66\x17\x6d\xc7\x41\xf4\x38\xdb\x4f\x28\x9b\x22\xa2\xb2\x19\x94\xd8\xd2\xe1\x6f\xb7\x8b\xe0\x6f\x14\x78\xa2\xda\x7e\x64\x4b\x05\x7c\xf6\xee\xd7\x40\x31\x19\xdf\xa7\x7e\x56\xda\xe3\xeb\x5e\x34\x1d\x7d\xe8\xd7\x9f\x1e\x96\x12\x86\x4a\x2e\x7a\x98\x0a\xfe\xc3\xf9\xef\xd0\xb3\x77\x15\x36\x33\x58\xf4\x31\x99\x99\xf8\x75\x73\x9b\x5d\xf3\xa5\xb3\x9c\x13\xda\xc6\xf9\x4b\xfe\x14\x17\x97\x67\x3f\xb3\x3d\x34\x7a\x3d\x2d\x7e\x91\xe7\x63\xd1\x35\xdf\xa3\x71\x9c\x8f\xaf\x5e\xe7\xa3\x6d\x02\xb3\xe4\xff\xda\x88\x69\x40\x97\xba\xa1\x2f\x7d\xde\xe1\x88\x7f\x5f\xef\xd3\x15\xcd\x38\xd4\xe6\x07\x5b\x34\x17\xf6\xf0\xb0\x03\xcf\x41\x28\x74\x1c\xf6\x41\x76\xf9\xe8\xd6\xf2\x02\xdd\x72\xa9\x14\x0b\x2f\x14\x46\x6c\x9e\xe9\x95\x4b\xd5\x38\xe3\xd7\x3b\xe4\x61\xfe\x70\x23\x6c\xed\xe3\x6d\x01\x6f\xad\x3d\x0e\xf4\xa9\x23\xe8\x87\x4e\x7b\x3f\x5d\x2a\xda\x82\xbe\x0a\xae\x13\x93\xee\xd2\xdf\x01\x00\x00\xff\xff\x46\x95\x86\x66\x7e\x04\x00\x00")

func timeVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_timeVdlConfig,
		"time/vdl.config",
	)
}

func timeVdlConfig() (*asset, error) {
	bytes, err := timeVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vdltoolConfigVdl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x5f\x93\xd4\x36\x12\x7f\x9e\xf9\x14\x5d\x5b\x57\x15\xa0\x26\xf6\x5d\xee\xcf\x03\x57\x79\x20\x2c\x6c\x6d\x8e\x00\xc7\x2e\xe4\xea\x52\x79\xd0\xd8\x3d\x33\x62\x6d\xc9\x91\xe4\xd9\x9d\x50\x7c\xf7\xab\xee\x96\x64\x79\x76\x81\x90\xcb\x53\x92\x87\x30\x6b\x49\xfd\xbf\x7f\xdd\x6a\xbb\xae\xe1\xb1\x1d\x0e\x4e\x6f\x77\x01\xbe\xfa\xf3\x5f\xfe\x0e\x97\x3b\x84\x37\xca\xa8\x56\x8f\x3d\x3c\x1a\xc3\xce\x3a\x5f\xc1\xa3\xae\x03\xde\xe4\xc1\xa1\x47\xb7\xc7\xb6\x5a\xd6\x35\xbc\xf6\x08\x76\x03\x61\xa7\x3d\x78\x3b\xba\x06\xa1\xb1\x2d\x82\xf6\xb0\xb5\x7b\x74\x06\x5b\x58\x1f\x40\xc1\x37\x17\xa7\x5f\xfa\x70\xe8\x90\x4e\x75\xba\x41\xe3\x11\xc2\x4e\x05\x68\x94\x81\x35\xc2\xc6\x8e\xa6\x05\x6d\x20\xec\x10\x9e\x9d\x3f\x7e\xf2\xfc\xe2\x09\x6c\x74\x87\xd5\x92\x8e\xbc\x54\xcd\x95\xda\x22\xec\xdb\x2e\x58\xdb\x41\x8b\x1b\x6d\xd0\x43\x38\x0c\xe8\x61\xf4\xc2\x87\xce\xee\xdb\x0e\x78\x8b\x0e\x1e\xbb\xcd\x0a\xb4\x69\xba\xb1\xd5\x66\x4b\xcb\x44\x6b\x63\x5d\xaf\x02\xc9\xbd\x6f\xbb\xaa\xb1\x66\xa3\xb7\xcc\xca\x57\xcb\x61\xce\x87\x79\x3f\x96\x1d\x7e\xc0\x46\x6f\x34\x31\xdd\x91\x9a\xf4\x70\x74\x2a\x68\x6b\x88\xe4\x8c\x79\x05\x70\x49\x36\xd1\x2c\xa1\x6e\x54\xd7\x1d\x88\x94\xc3\x81\xec\x67\x02\xb2\xae\x76\xa0\xd3\xaa\x83\x93\x49\x92\x13\x11\x85\x96\x51\x35\x3b\x26\x19\x4d\x1b\x85\xab\x00\x9e\xa8\x66\x47\xf4\x8e\x14\x00\xdd\x0f\x9d\x6e\x74\xe8\x0e\xf4\xd3\xba\xe0\xc5\x37\xc5\xc9\x6a\x5b\xc1\xc1\x8e\xd0\xab\x03\x38\xdc\xa0\x83\x60\x23\x29\x96\x3c\x6a\x1b\x3d\x71\x4b\x30\xb8\xd6\x61\x67\xc7\x00\x78\x73\xc4\x8a\x2c\x9c\x88\x2c\xc9\x2f\xd9\x70\xc1\x8d\x4d\x80\x77\xcb\x45\x5d\xc3\x19\x9a\x67\xca\x6c\x47\xb5\x45\x8e\xa5\xe0\x74\x13\xc4\xa4\x1e\xd9\x29\x1c\x40\x5b\x34\x18\x6d\xdb\xa5\xed\x15\xc0\xf9\x26\xef\xd4\x9e\xe9\x61\x3f\x84\xc3\x0a\x54\xd7\x81\x1f\x07\x92\x03\xdb\xe9\x08\x28\x87\xb4\x66\xaf\xb1\x85\x60\x29\xd0\x22\x65\x0a\xe0\xc5\x4c\x18\x8f\xe1\x87\xe2\xc1\x8f\x4b\xa6\x9f\xfe\xfc\x32\xba\xbf\x99\x7b\xde\x13\x15\x0b\xe9\xbf\x33\x2b\x3a\x2f\x17\xdf\xaa\xbd\x8a\x0f\xe9\x67\xf9\xd8\x37\x4e\x0f\x01\xa6\x9f\x69\xf1\xe2\x5a\x6f\x82\x9c\xe1\x9f\xf1\xf9\x7b\x8e\xc2\x42\x34\x40\x33\xf6\xac\x84\x18\xee\xca\xd8\x6b\xf3\x11\xbb\x89\x37\x8e\x09\x90\x43\xce\xac\x88\x54\x0a\x16\xe5\x48\x6c\xed\xad\xf0\xdf\x5a\xb8\xdb\x18\x89\x91\xbd\xcb\xf1\xdf\x6b\x87\x97\xf6\xb9\x0a\x7a\x8f\x97\x9c\xb5\xf3\x84\xea\xd5\x30\x50\x08\x6d\x9c\xed\x41\xc1\x9b\xd3\x67\x70\xad\x1d\x72\x86\x93\xeb\x74\xf0\x40\xe2\xd6\x35\x18\x26\x22\x2b\x39\xa3\x44\x82\x29\xef\x9c\x72\xd8\x1d\x04\x1a\x94\x69\x01\x95\x3f\x10\x9d\x24\x31\x32\x29\x6d\x1a\xeb\x1c\x36\xa1\x3b\xfc\x13\x46\x4f\xb6\xd1\x1e\x9a\xd1\x39\x34\x14\xda\x29\x42\x25\x7c\x62\x1a\x79\x41\x2e\x8a\xad\x29\x0b\x98\xdc\xf5\x4e\x07\xec\xb4\x97\xf0\xaa\xeb\x0f\x68\x4e\x27\x7b\x54\x26\x30\x70\xf8\x06\x8d\x72\xda\x7a\xb8\xde\x21\x69\xcc\xff\xd7\x1e\x94\x01\xdd\x6a\xdb\xab\xa0\x9b\xa4\x3b\x2b\xcd\x4a\x69\x43\x79\xec\xd8\xef\x2b\x58\x8f\x81\xd3\xda\x20\xe9\x0b\x3e\x28\xd3\x2a\xd7\xb2\x1d\xe7\x36\x62\x9e\x64\x5a\xa6\xd7\xd8\x7e\x50\x41\xaf\x75\xa7\xc3\x21\xe1\x03\xf9\x83\x0e\x06\xdd\x67\xd4\xc9\x90\x7b\x9a\x40\x8f\xac\x7a\x49\x3b\x36\xd6\x89\xf6\xe4\xaf\x19\x41\x91\xeb\x1a\xe1\x9a\x94\x25\xb2\x39\xfd\x24\x5e\x83\x25\x65\x24\xa9\x93\xc8\x49\xd3\x82\xf9\x64\x4c\xaa\x4f\x57\x78\x90\xaa\xc3\x51\xc3\x20\xbb\x43\x30\xaa\xc7\xf4\x98\x85\x27\x4b\xdd\x53\x57\x4a\x1c\x70\x18\xf0\xfe\x8a\x1c\xd4\xec\xa0\x1f\x7d\x60\x6a\xeb\xa4\x56\x2e\x3d\x04\xb7\x49\x63\xe5\xbd\x6d\x34\x0b\x4b\xa8\x97\xd6\x4b\xc4\x9d\x0b\x56\xa6\xa0\x75\x74\x7e\xec\x63\x78\xe3\x0d\x45\x85\x69\x58\x44\x05\x83\xd2\x4e\xc0\xce\xec\xd1\x79\x76\xcb\x68\x1a\x86\x94\xe8\x17\x5a\x60\x50\x5d\x63\xb8\x46\x14\xf1\xd8\xc4\x64\xf8\x22\x07\xfc\x8a\x9f\x5c\xeb\xae\x03\x35\x06\x89\x17\xaa\x38\x40\xff\x67\x6a\x24\xf5\x2b\xdc\x92\x08\x4e\x02\x31\x6b\xe4\x31\x73\x66\x13\xfa\x49\xa5\x47\x24\x7f\x2c\x9c\x33\xf3\x26\x83\x92\xe9\x9f\x5a\xfb\x90\x77\x03\xd3\x81\x8d\xb5\x29\xd8\xef\xdd\xd0\xea\x0a\x0c\x3c\x90\x07\xf7\x01\x9d\x8b\xc1\x32\x6d\x7f\xea\x6c\x9f\x0f\x3c\x88\x27\x8e\x0e\xdc\xce\xa1\x5e\x0d\x3f\x50\x6e\x9a\xed\x8f\x67\x96\x1e\x09\x5e\x5f\x30\xe6\x5c\xaa\x6d\x89\x2f\xca\x1c\x18\xb5\x04\x8f\x02\x2d\x4a\x31\x90\xde\x60\x32\xc6\x14\x9e\x4c\x6c\x6b\xd9\xa5\x15\x3b\xb7\xa0\x1c\xa3\xee\x0a\x0f\x53\xdf\x91\x88\x1f\x06\xfc\xc2\xb3\xb5\xaa\xe5\x62\x7e\x26\xc9\xfb\xc3\x8f\x67\x36\xaf\x64\x9c\xcd\x4f\x4a\xc1\xc1\x6b\xb3\xed\x70\x2e\x3d\xbb\x9b\x78\x6e\x34\x76\x0c\x4c\x12\xd6\x3a\x10\x25\xbf\xb3\x63\xd7\x92\x76\x6a\x18\x3a\x4d\x48\x14\x61\xb9\xe0\x90\x91\xf9\x29\x93\x10\xc1\x96\x8b\xb8\x46\xbf\x93\x58\xec\xe7\x16\xa9\x36\xac\x63\x2c\x9f\x59\x49\x2e\x6d\xa4\x95\x62\x30\x38\xca\x15\x95\x73\x90\x1b\xc5\x0b\x44\xd8\x57\xda\xd6\x37\xb5\xc3\x4d\xdd\xe9\x75\xbd\x6f\xbb\x3a\xa0\x0f\xad\x0a\xaa\x8e\xe1\x4c\xd0\x84\x37\xaa\x1f\xba\xa9\x6c\x89\x04\xb3\x5a\xf2\x2f\x4d\xbd\x62\x2c\x7e\xf4\xdb\x6e\xe0\x92\x59\x2d\x78\xe9\xcc\xd2\x3f\x92\x96\x31\x4c\x4b\xb9\x23\xe8\x68\x73\x84\x46\xd4\x2b\xfa\x80\xaa\x3d\x86\x91\x6a\xb9\x48\x42\xb0\x99\xea\x1a\xfe\x8b\xce\x16\x8e\xfa\x99\xfe\xdc\xab\x6e\xe4\xe6\x84\xd3\x96\x9c\xd4\xec\xb0\xb9\x92\x1c\xde\xa9\xbd\xb6\xae\x5a\x2e\xf8\xe4\x99\xa5\x7f\x44\xc2\x18\xd6\x7c\x60\xca\x05\xa0\xfe\xd9\xe9\x16\x27\x74\xf3\x49\xae\x68\xad\x09\x3c\x98\x50\x06\x10\x69\x94\x46\x93\xc4\x6b\x57\x7c\xaa\xc5\x8d\x1a\xbb\x30\xed\xe3\x3a\x14\x49\x92\x27\x53\x1e\xa7\xf4\xce\x79\xcc\xa8\x93\x9e\xae\x12\xfb\x07\x53\x3a\xce\x13\x3b\xed\x2c\x12\x9b\x29\x3c\xb8\x45\xe2\x0e\x0a\xd9\x1c\xc9\xd8\x85\x49\x0a\xfb\x9f\xc7\xf6\x56\x49\xc1\x24\xdf\xa6\x8e\x97\xbb\x5a\x82\xda\x9c\x9b\xc2\xf3\x03\x86\x16\xdb\x51\x1a\xb0\xe1\x62\xdb\xcd\x0f\x56\xb7\x8b\x53\x67\x1b\x35\x55\x08\xf2\x8a\xa0\xaf\xd8\x5a\xba\x00\x3a\x20\xc2\xe4\x8d\x54\xd2\x73\x75\x4d\x81\x73\x28\x9d\x29\x91\xa9\x7b\xac\xa8\xa6\x26\x57\x48\xf4\xbf\x8b\x7f\x01\x47\xfe\x43\x6e\x10\x39\x1f\x56\x79\x81\xb6\xf1\xc2\x49\xa6\x71\x32\xad\x52\xb0\xf1\xea\xbb\xef\x6c\x8b\x0f\xe1\xb1\x32\xd6\x50\x91\x58\xc1\xb9\x97\xc5\x93\x4a\x7e\xdd\xbb\x7f\xf2\x7e\x3a\x18\xcd\xfc\x10\xde\xbd\x7b\xa9\xc2\xee\xa1\x90\x3f\x59\xc1\x73\xd5\x63\xfa\xeb\x7d\x3e\xf0\x7e\xb9\x48\x8e\x21\x90\x93\xdf\x19\x4a\x38\x37\xe7\x50\x92\xb2\x37\xa6\x66\xce\x79\xde\x9a\xba\x54\xd1\x75\xb9\xf8\x86\x6e\x64\x8b\xe7\x63\xbf\x46\xc7\x4f\x39\x18\x1e\x39\xa7\x0e\xcb\xc5\x05\xdd\x2a\x97\x8b\xef\xd4\xb0\x5c\xbc\xb4\xda\x04\xda\x73\xbe\x51\x0d\x66\xfe\x22\x4e\x21\x41\x0e\x9a\x12\xca\xb2\x0c\x71\xfb\x0c\x79\xc8\x08\x09\x4e\x92\x6f\x07\xc5\xc5\x43\x05\x18\x8d\xfe\x69\xa4\xae\x53\xb7\x68\xc2\xd4\xdb\x0a\x13\x6c\x8b\x76\x86\x09\x15\xf1\x4c\xf6\xbc\xab\x93\x49\x4c\x32\x45\x0e\x6a\x3a\x5d\x01\x9c\x8e\x0c\x66\x67\x56\xa0\xc0\x70\x56\x8b\x2f\x74\x98\x5d\x3e\xe1\xed\xe8\xa5\x01\x5b\x2b\x8f\x89\x01\x91\x91\x16\x8d\x6e\x83\x6b\xb9\x58\x51\x78\xda\x1e\xc3\x2e\x89\xd6\xea\x0d\x27\x54\x00\xbd\xb9\x53\x1d\x68\x2d\x7a\xf3\x05\x75\xb3\x74\xd5\x3a\x92\xa7\x5a\x2e\x58\xb9\xa3\xba\xc2\x30\x38\x73\x45\x81\xa1\x13\x5c\xd6\x35\x6d\x7f\xf5\xe4\xdf\xaf\xcf\x5f\x3d\x39\x7d\x08\x4f\x34\xb5\xc7\x40\x61\x0c\x5f\x7f\x0d\xaf\xd9\xe2\x60\x5d\x8c\x63\x52\xda\x63\xa8\x00\xbe\x47\xe9\x88\x8c\x0d\x30\xa0\x23\xf7\x2e\xf3\xdd\xa1\x8e\xad\x6a\xc2\x4f\xee\x07\x18\xac\x0b\x29\xa6\x0a\x24\x60\x9f\xe3\x80\x99\xcb\x53\xfa\x29\x78\xe4\x8f\x2a\x82\x4a\x10\x42\xa6\xb4\x2d\x89\x98\xfb\x2c\x0e\x16\x87\x61\x74\xc4\xd9\x8d\x08\x7a\xc3\xa6\x2d\xaf\x37\x62\x89\xdc\xbb\xfb\x5c\x91\x26\x09\xa7\x56\xed\x7c\x93\x25\x08\x8a\xd2\x2f\x16\xe1\xd6\x06\xb8\x57\xdd\x5f\xc5\x78\x90\x8e\x34\x5d\x85\xa3\x88\x24\x9a\x08\x59\xe5\x4e\x36\x76\x16\xa4\x7e\x5e\x8d\x12\xcb\x53\x6a\xa1\x89\xc6\x5a\xa6\x1d\x67\xf3\xb6\x9e\x2c\xcf\xb4\xa8\x05\x11\x98\xcb\xe2\x39\x1e\x14\xa0\x5b\xab\xa0\x7b\x92\x04\x6f\x48\x45\x71\xc3\xbc\xc0\xc5\xda\x7b\x4b\xc7\x14\x6f\xac\x6b\xa1\xea\xc7\x34\x4d\xb6\xbf\xde\x59\x2f\x76\xfe\x3c\x75\xb8\x99\x96\x52\x99\x49\x31\x63\xa6\x15\xdb\x34\xe5\xb6\x63\x8f\x7c\xd5\x51\x21\x5e\xe1\x26\xf5\x3e\xaa\xdd\xe5\x8b\xd3\x17\xf7\x82\x6d\xdb\xeb\xfb\x0f\xc5\x05\x89\x0d\x85\x2e\x1d\xcd\x11\x4e\xaa\x6b\xea\x91\x7a\x9e\x24\x55\xcb\xc5\xcc\xb8\xb7\xc9\x3d\x6a\xe9\x4e\x78\x81\x81\x77\xc5\xb8\x8c\x3d\xa3\x87\x4e\x5f\x25\xf7\x08\x18\xa4\xc8\x54\xd2\x57\x14\x0a\xb0\x5a\x1e\x63\x30\x96\x81\x58\xa6\x35\xe7\xc7\x1c\xe7\x1d\x76\x32\x2f\xd9\xe9\x61\x76\xa1\x99\xe7\xfd\xcc\x40\xcb\x78\xdd\x5d\xe5\x7e\xf7\x38\xfa\x8b\xf4\x64\x9e\xa9\x60\xd4\x35\xbc\x36\x32\x15\x29\x87\x0c\x2a\xdc\xc1\x92\x62\x89\x41\x22\x67\xda\x8c\x95\x5c\x9f\x98\x5d\x31\xd3\x9b\xba\xa9\x22\x3c\x8d\xcc\xda\x7a\x8e\x98\xe9\x2a\x01\x9e\x30\x31\xdd\x76\x23\x14\x7d\x10\x87\xd2\x5d\x3a\x75\x91\x25\x1c\x01\x5c\xde\x81\x52\xc4\xcb\xe1\x4f\x23\x0f\x4b\x92\x8e\xe2\xce\xa9\xb5\xb9\x13\x86\x22\x56\x2e\x17\xd1\x58\xbc\x3d\xb7\x06\x9f\x36\xdd\xed\x70\x8e\xc6\x91\x1b\x6c\x26\x74\x34\x7f\x28\x9a\xeb\x89\x98\x44\x9e\x16\x57\xd0\xb2\x35\xdd\xe1\xc8\x03\xb7\x87\x3d\x79\x5a\x31\x97\x2a\x49\x94\x3a\xa1\x5f\x2a\xd6\xcf\x39\x05\x24\xc9\x66\x72\x50\x8e\x37\xc2\xc9\x83\xea\xbc\x8d\xc9\xa1\xbd\x8c\x71\xa6\x32\x49\x3d\x62\x2a\x7d\x9f\x0a\x8e\x8d\xf2\x41\x82\x83\x47\x41\x9f\xf6\xfa\x64\x8e\x8f\x79\xfe\x97\x78\x3d\x7b\x3a\x26\x0c\x57\xd2\x5f\xef\x74\xb6\x54\x04\xd6\x4f\xfb\xfb\xc3\xce\x63\xaf\xa5\x21\x13\xd3\xbb\x27\x50\xb5\x53\x9e\xbb\x97\x74\xf9\x0c\xff\xf8\xdb\xfd\x92\xf7\x07\x1c\xfa\xd9\x4e\x58\x5b\x6a\xcd\xee\xba\xc5\x1d\xd9\x9f\x33\x87\xac\x16\xd1\x6f\x1a\xf4\x16\x66\x7c\xab\xf6\xea\xe3\xf3\xd2\xf2\xd8\x6f\x3d\x31\x95\xe1\xee\x1f\x75\x66\x9a\xb5\xff\xfd\x4e\x4d\xad\xdb\x56\x6f\x6d\xab\x2a\xe2\xca\xf4\x7e\x27\x23\xd3\x08\x3e\x77\x0d\x48\xa5\x1f\x5b\x53\x20\xcb\x48\x33\x8e\xeb\xb4\x91\x6c\x2b\x04\xaa\x3e\x31\x3a\x8c\x1d\xd3\x14\x73\x87\x01\x5f\xa1\x0c\x5b\x3e\x23\xdb\xd8\x90\x92\x72\x4c\x8a\xdf\xfe\x94\x29\x17\xe7\x81\x65\x74\x17\x9c\x3e\x19\xdb\x13\x3b\x3a\x90\x06\xc4\x9b\x8e\xdf\x9d\x69\xc3\x17\x36\xb8\x56\x87\xc9\xe8\xa5\x04\xcc\x64\x05\x58\x6d\xab\x55\x14\xfd\xdc\x04\xdc\xa2\x9b\x92\xa3\x49\x43\x43\xda\xdc\xc2\x9b\xb8\x81\x05\x6a\x3a\xe5\x28\xce\x27\xf9\x77\x68\x28\x64\xd7\x1c\x06\xcc\xf3\x96\x95\x57\x82\xb5\x1b\x54\x61\x4c\x2f\xe1\x3c\x8c\x7c\xd3\x52\x21\xa8\x66\x37\x1f\x5a\xd1\xf3\x14\x83\x54\xf4\x9e\x4e\xa3\xc0\x15\xe5\x82\xbc\xaf\x64\x43\x3f\x6a\x1a\xf4\xfe\x19\x15\xde\x74\x22\xfa\x3f\x58\x16\xa4\xd8\x10\x5b\x47\xc3\x61\x7f\xb4\x16\x2c\x10\x14\x1c\x3b\x4b\x66\xdf\xd3\x36\x49\x80\x94\xc8\x93\xc0\xd6\x64\xd7\xb4\x2a\xa8\x5f\x93\x70\x39\x82\xca\x34\x83\xb5\x88\xf0\x7f\xa7\xd9\x71\x98\xdd\x8e\xfb\xa9\x6e\x95\x6f\x22\x8f\xaa\x57\x7c\x5f\xf9\xc9\x1a\x36\x27\x91\x2a\x99\xb0\x28\xde\x67\x16\xd4\x3d\xbf\xf0\xbc\x9b\x70\x7c\xa7\x5e\xbc\xbc\x26\x3a\xcf\x6d\x88\xbd\x4e\x8b\x7e\xd0\x41\xb2\xa3\xa4\x2e\xef\xd4\xb9\x91\x06\x05\x5b\xbd\x47\x93\xcd\x16\x1b\x89\x3c\x21\xe7\xf7\xde\xe8\x0e\x5c\xf8\xc8\xce\x83\x53\x4d\xd0\x0d\xc3\x1e\x82\x0f\x3c\x40\x40\x29\x64\xd4\x22\xdf\x72\xa2\x68\xd0\xdb\x76\x94\x4f\x1b\x22\x6e\x4d\x52\xcb\xcd\x07\x39\xbc\xa9\x1a\x3a\x3b\xa0\xa3\x1a\x6b\x5a\x74\x5c\x6f\xd2\x08\x6a\x6d\x47\x2a\x3e\x64\x97\x78\x41\x22\x82\x83\xb3\x6f\xb1\x09\xbe\xde\x38\xd5\xe3\xb5\x75\x57\xbe\x16\x76\x3e\x0d\x47\xbe\xa7\x4b\x8c\x30\x5d\x1f\x24\x6a\xb8\x73\x91\xf7\xf5\x74\x6d\xc5\x16\x4e\x58\x52\x39\x79\x12\xbf\xbc\xb0\x26\x28\x6d\x3c\x7c\xfb\xfa\xe2\x32\x7d\x1c\x51\x2a\x77\x51\x28\x07\x11\x8f\x9d\xb5\xfc\x96\x9e\x8b\x28\x85\x70\xaa\xef\xd5\x2c\x63\x89\x94\xe6\x5d\xb0\x53\xfb\x09\xc3\xe4\xdb\x06\xf2\x0d\x13\xf8\x0f\xc3\x7f\xd4\xb1\x0e\xca\x6d\x31\x24\x89\x5f\xaf\xd1\x3d\xb5\xee\xb1\x0a\x9e\xa8\xa9\x00\xf5\x6b\x8f\xce\xd7\x4a\x39\x6b\xea\x71\xcd\x37\xa9\x46\x05\x5f\xef\xdb\x6e\x25\x59\xde\x38\x54\x81\x15\xf9\xd8\xe6\xba\xb1\x7d\x55\x3e\x2b\x8c\xc3\x88\xc1\x32\xeb\x20\x53\xb3\x68\x27\x22\x7a\x52\x08\x75\x52\x91\xe5\x99\x2b\xd7\xa3\x40\xac\xf9\x55\xd3\xa4\x68\x3c\x9a\x92\x98\xc2\x56\x53\xe7\x64\xdd\x81\xf8\xb0\x5e\xe6\x00\x7e\x5c\xa7\xe7\x3c\x3a\xa2\xe8\x71\x21\xb9\xa1\xe0\x39\x73\xc9\x0a\xc6\x2e\xe8\x5e\x05\xea\xd9\x3a\xe9\x57\x97\x71\xfc\x4c\xfd\x84\xee\xd0\x7d\xe8\xcd\x20\x07\x0c\xca\x37\x3d\xc0\xa3\x3e\x72\x97\xa5\x36\xca\xa7\x80\x64\x0f\x95\xc9\x77\x2e\x0e\x6d\x2d\xdd\x8d\x52\xc8\xb1\x01\x8c\x5d\xdb\xf6\x90\xeb\xb2\x5a\x77\x52\x0e\x0b\x42\x19\xdb\xc9\x14\xac\xc6\x4a\xd4\x6f\xe5\x73\x14\x96\x04\x4d\x0b\xe3\x20\x98\x86\x37\xc1\x29\xe8\xac\xd9\x52\x01\xf2\xbe\x1e\xae\xb6\xf1\x35\xc8\xbd\xc7\xb6\x2f\xdc\x77\x81\x6e\xaf\x1b\xf4\x2f\x9d\xdd\xc8\x3b\xb0\xe2\x3d\xce\x7c\x91\x43\xef\x4f\x6f\x4e\x9f\xbd\x7a\xf1\xe2\xf2\x76\x18\xc4\xbd\xf5\xc0\x9b\xef\xa7\x0c\x8b\x8a\x13\x48\x70\x80\x91\xb9\x7a\x32\xfe\xd0\xcd\xb3\x64\x0e\x3b\x89\x8f\xd8\x88\x63\x69\xe8\x54\xc3\xe1\x59\x46\x9c\xc4\x4a\x4c\xb0\xce\x6e\xf9\x76\x3a\xc1\x41\xcc\xac\xa9\x14\x26\xd3\x13\x2f\x7e\xa9\xb6\xff\xea\xaf\xec\x78\x9e\x75\xe1\x4d\x9c\xce\x06\xf1\x71\xfa\x9a\xeb\xb1\x75\x08\x19\x45\xa4\xc7\x44\x42\x3f\x71\x3f\x03\x52\x26\x97\x4d\x21\xdf\x6b\xed\xc5\x6d\x25\xb9\x64\xd7\x89\x64\x2c\x05\x33\xa8\xff\xad\xef\x33\xf2\x69\xca\x1f\xf6\x42\x33\xa9\xff\xfb\xbc\xd1\x3c\xbf\x38\xa5\xfb\xb8\x75\xf0\xfc\x82\x48\x52\x17\xea\xf6\x32\xa1\xf8\xc3\xdd\x65\x04\x58\x3e\xff\x32\xf3\x7e\xf9\xbf\x00\x00\x00\xff\xff\x8f\x81\x37\x9d\xd7\x29\x00\x00")

func vdltoolConfigVdlBytes() ([]byte, error) {
	return bindataRead(
		_vdltoolConfigVdl,
		"vdltool/config.vdl",
	)
}

func vdltoolConfigVdl() (*asset, error) {
	bytes, err := vdltoolConfigVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vdltool/config.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"math/math.vdl":           mathMathVdl,
	"math/vdl.config":         mathVdlConfig,
	"signature/signature.vdl": signatureSignatureVdl,
	"time/time.vdl":           timeTimeVdl,
	"time/vdl.config":         timeVdlConfig,
	"vdltool/config.vdl":      vdltoolConfigVdl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"math": {nil, map[string]*bintree{
		"math.vdl":   {mathMathVdl, map[string]*bintree{}},
		"vdl.config": {mathVdlConfig, map[string]*bintree{}},
	}},
	"signature": {nil, map[string]*bintree{
		"signature.vdl": {signatureSignatureVdl, map[string]*bintree{}},
	}},
	"time": {nil, map[string]*bintree{
		"time.vdl":   {timeTimeVdl, map[string]*bintree{}},
		"vdl.config": {timeVdlConfig, map[string]*bintree{}},
	}},
	"vdltool": {nil, map[string]*bintree{
		"config.vdl": {vdltoolConfigVdl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
