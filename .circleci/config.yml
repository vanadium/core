version: 2.1
orbs:
  go: circleci/go@1.7.0

jobs:
  test-linux:
    parameters:
      go:
        type: string
    executor:
      name: go/default
      tag: << parameters.go >>
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - run:
          name: goimports
          command: |
            go get golang.org/x/tools/cmd/goimports
            go install -x golang.org/x/tools/cmd/goimports
      - go/save-cache
      - run:
          name: vdlpath
          command: |
            echo "export VDLPATH=$CIRCLE_WORKING_DIRECTORY" >> $BASH_ENV
      - go/test:
          coverpkg: ""
          covermode: atomic
          failfast: true
          race: true
      - run:
          name: integration-tests
          command: |
            make test-integration

  test-linux-integration:
    parameters:
      go:
        type: string
    executor:
      name: go/default
      tag: << parameters.go >>
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - run:
          name: goimports
          command: |
            go get golang.org/x/tools/cmd/goimports
            go install -x golang.org/x/tools/cmd/goimports
      - go/save-cache
      - run:
          name: openssl
          command: |
            uname -a
            sudo apt-get update -y
            sudo apt-get install -y pkg-config openssl libssl-dev
      - run:
          name: vdlpath
          command: |
            echo "export VDLPATH=$CIRCLE_WORKING_DIRECTORY" >> $BASH_ENV
      - run:
          name: integration-tests
          command: |
            make test-integration

  lint:
    parameters:
      go:
        type: string
    executor:
      name: go/default
      tag: << parameters.go >>
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - run:
          name: downloads
          command: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
            go get github.com/matthewloring/validjson/cmd/validjson
            go install -x github.com/matthewloring/validjson/cmd/validjson
      - go/save-cache
      - run:
          name: lint
          command: |
            golangci-lint run ./...
            validjson ./...

workflows:
  circleci:
    jobs:
      - test-linux:
          matrix:
            parameters:
              go: ["1.16"]
      - test-linux-integration:
          matrix:
            parameters:
              go: ["1.16"]
      - lint:
          matrix:
            parameters:
              go: ["1.17"]
